{"remainingRequest":"/Users/karen.chen/Desktop/yuan-yang-view/node_modules/babel-loader/lib/index.js!/Users/karen.chen/Desktop/yuan-yang-view/node_modules/vuetify-loader/lib/loader.js!/Users/karen.chen/Desktop/yuan-yang-view/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/karen.chen/Desktop/yuan-yang-view/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/karen.chen/Desktop/yuan-yang-view/src/components/CDNsetting.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/karen.chen/Desktop/yuan-yang-view/src/components/CDNsetting.vue","mtime":1557902520754},{"path":"/Users/karen.chen/Desktop/yuan-yang-view/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/karen.chen/Desktop/yuan-yang-view/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/karen.chen/Desktop/yuan-yang-view/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/Users/karen.chen/Desktop/yuan-yang-view/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/karen.chen/Desktop/yuan-yang-view/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport textFieldRules from \"../utils/textFieldRules.js\";\nexport default {\n  mixins: [textFieldRules],\n  props: [\"tab\", \"domain_id\"],\n  data: function data() {\n    return {\n      pagination: {\n        rowsPerPage: 20\n      },\n      rowsPerPageItems: [{\n        name: \"20 per page\",\n        value: 20\n      }, {\n        name: \"50 per pages\",\n        value: 50\n      }],\n      perPage: 20,\n      pages: 0,\n      dialog: {\n        edit: false\n      },\n      error: {\n        status: false,\n        message: \"\"\n      },\n      domain: {},\n      editedIndex: -1,\n      operatorAuth: 0,\n      searchText: \"\",\n      filterData: [],\n      headers: [{\n        text: \"#\",\n        align: \"left\",\n        sortable: false,\n        width: \"80px\",\n        value: \"id\"\n      }, {\n        text: \"Name\",\n        align: \"left\",\n        sortable: true,\n        value: \"name\"\n      }, {\n        text: \"CDN CName\",\n        align: \"left\",\n        sortable: true,\n        value: \"cname\"\n      }, {\n        text: \"TTL\",\n        align: \"left\",\n        sortable: true,\n        value: \"ttl\"\n      }, {\n        text: \"Default\",\n        align: \"left\",\n        sortable: false,\n        value: \"default\"\n      }, {\n        text: \"Actions\",\n        align: \"left\",\n        sortable: false,\n        width: \"200px\"\n      }],\n      cdn: {}\n    };\n  },\n  methods: {\n    getAllCDNs: function getAllCDNs() {\n      this.$store.dispatch(\"global/startLoading\");\n      this.$store.dispatch(\"domains/getAllCDNs\", this.tab.domain_id).then(function (result) {\n        this.filterData = result.data;\n        this.cdn.domain_id = this.tab.domain_id;\n        this.setPages();\n        this.$store.dispatch(\"global/finishLoading\");\n      }.bind(this)).catch(function (error) {\n        this.$store.dispatch(\"global/finishLoading\");\n        this.$store.dispatch(\"global/showSnackbarError\", error.message);\n      }.bind(this));\n    },\n    editItem: function editItem(item, type) {\n      this.editedIndex = this.filterData.indexOf(item);\n      this.cdn = Object.assign({}, item);\n\n      if (type == 0) {\n        this.dialog.edit = true;\n      }\n    },\n    updateCDN: function updateCDN() {\n      this.cdn.domain_id = this.tab.domain_id;\n\n      if (this.$refs.editForm.validate()) {\n        this.$store.dispatch(\"global/startLoading\");\n\n        if (this.editedIndex == -1) {\n          this.addNewCDN();\n        } else {\n          if (this.cdn.default == false) {\n            this.cdn.default = 0;\n          } else {\n            this.cdn.default = 1;\n          }\n\n          this.$store.dispatch(\"global/startLoading\");\n          this.$store.dispatch(\"domains/updateCDN\", this.cdn).then(function (result) {\n            this.$store.dispatch(\"global/finishLoading\");\n            this.getAllCDNs();\n            this.closeEditDialog();\n          }.bind(this)).catch(function (error) {\n            this.$store.dispatch(\"global/finishLoading\");\n            this.$store.dispatch(\"global/showSnackbarError\", error.message);\n          }.bind(this));\n        }\n      }\n    },\n    addItem: function addItem() {\n      this.$refs.editForm.reset();\n      this.editedIndex = -1;\n      this.dialog.edit = true;\n    },\n    addNewCDN: function addNewCDN() {\n      this.cdn.domain_id = this.tab.domain_id;\n      var vm = this;\n\n      if (this.$refs.editForm.validate()) {\n        this.$store.dispatch(\"global/startLoading\");\n        this.$store.dispatch(\"domains/newCDN\", this.cdn).then(function (result) {\n          this.$store.dispatch(\"global/showSnackbarSuccess\", \"Update user success!\");\n          this.getAllCDNs();\n          this.$store.dispatch(\"global/finishLoading\");\n        }.bind(this)).catch(function (error) {\n          this.$store.dispatch(\"global/showSnackbarError\", error.message);\n          this.$store.dispatch(\"global/finishLoading\");\n        }.bind(this));\n        this.closeEditDialog();\n      }\n    },\n    closeEditDialog: function closeEditDialog() {\n      this.dialog.edit = false;\n    },\n    setPages: function setPages() {\n      if (this.perPage == null || this.filterData == null) {\n        this.pages = null;\n      } else {\n        this.pages = Math.ceil(this.filterData.length / this.perPage);\n      }\n    }\n  },\n  computed: {\n    formTitle: function formTitle() {\n      return this.editedIndex === -1 ? \"New CDN\" : \"Edit CDN\";\n    }\n  },\n  watch: {\n    perPage: function perPage(value) {\n      this.pagination.rowsPerPage = value;\n      this.setPages();\n    },\n    domain_id: function domain_id() {\n      this.getAllCDNs();\n    }\n  },\n  mounted: function mounted() {\n    this.getAllCDNs();\n    console.log(this.editedIndex);\n  }\n};",{"version":3,"sources":["CDNsetting.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang=\"pug\">\n    v-container#cdnSetting\n        v-card\n            v-card-title\n                v-layout(row align-center)\n                    v-flex.px-2(xs12 sm6 md3)\n                        v-text-field.pt-0.mt-0(v-model=\"searchText\" append-icon=\"search\" label=\"Search\" single-line hide-details)\n                    v-spacer\n                    v-btn(color=\"primary\" dark @click=\"addItem\") Add CDN\n                    h4 {{tab.domain_id}}\n\n            v-data-table.elevation-1(:headers=\"headers\" :items=\"filterData\" :loading=\"$store.state.global.isLoading\" :pagination.sync=\"pagination\"  hide-actions :search=\"searchText\")\n                v-progress-linear(v-slot:progress color=\"primary\")\n                template(slot=\"items\" slot-scope=\"props\")\n                    tr\n                        td.text-xs-left {{props.index +1}}\n                        td.text-xs-left() \n                            .name.font-weight-medium {{props.item.name}}\n                        td.text-xs-left {{props.item.cname}}\n                        td.text-xs-left {{props.item.ttl}}\n                        td.text-xs-left\n                            v-icon(large color=\"green darken-2\" v-if=\"props.item.default == true\") check\n                        td.text-xs-left\n                            v-btn.ma-0(flat icon small color=\"primary\" @click=\"editItem(props.item, 0)\" title=\"edit cdn\")\n                                v-icon(small) edit\n                            v-menu(offset-y left) \n                                template(v-slot:activator=\"{on}\")\n                                    v-btn.ma-0(flat icon small color=\"primary\" v-on=\"on\" )\n                                        v-icon( small) more_vert\n                                v-list.pa-0\n                                    v-list-tile()\n                                        v-list-tile-title Change to default\n                                        \n            v-layout.px-2(row align-center)\n                v-flex.text-xs-left.py-3(xs4)\n                v-flex.text-xs-right.py-3(xs8)\n                    v-pagination(v-model=\"pagination.page\" :length=\"pages\" :total-visible=\"7\" color=\"primary\")\n        //- Dialogs\n        v-dialog.edit-dialog(v-model=\"dialog.edit\" max-width=\"460\" persistent)\n            v-card\n                v-card-title.title {{formTitle}}\n                v-card-text\n                    v-form(ref=\"editForm\")\n                        v-text-field(v-model=\"cdn.name\" label=\"CDN Name\" type=\"text\" name=\"name\" :rules=\"[rules.required]\")\n                        v-text-field(v-model=\"cdn.cname\" label=\"CDN CName\" type=\"text\" name=\"cname\")\n                        v-text-field(v-model=\"cdn.ttl\" label=\"TTL\" type=\"number\" name=\"ttl\" :rules=\"[rules.ttl]\")\n                        v-alert.text-md-left(:value=\"error.status\" color=\"error\" icon=\"warning\" outline transition=\"scale-transition\") {{error.message}}\n                v-card-actions  \n                    v-spacer\n                    v-btn(color=\"grey\" flat=\"flat\" @click=\"closeEditDialog\") Cancel\n                    v-btn(color=\"primary\" flat=\"flat\" @click=\"updateCDN\") Save\n</template>\n\n<script>\nimport textFieldRules from \"../utils/textFieldRules.js\";\n\nexport default {\n    mixins: [textFieldRules],\n    props: [\"tab\", \"domain_id\"],\n    data() {\n        return {\n            pagination: {\n                rowsPerPage: 20\n            },\n            rowsPerPageItems: [\n                { name: \"20 per page\", value: 20 },\n                { name: \"50 per pages\", value: 50 }\n            ],\n            perPage: 20,\n            pages: 0,\n            dialog: {\n                edit: false\n            },\n            error: {\n                status: false,\n                message: \"\"\n            },\n            domain: {},\n            editedIndex: -1,\n            operatorAuth: 0,\n            searchText: \"\",\n            filterData: [],\n            headers: [\n                {\n                    text: \"#\",\n                    align: \"left\",\n                    sortable: false,\n                    width: \"80px\",\n                    value: \"id\"\n                },\n                {\n                    text: \"Name\",\n                    align: \"left\",\n                    sortable: true,\n                    value: \"name\"\n                },\n                {\n                    text: \"CDN CName\",\n                    align: \"left\",\n                    sortable: true,\n                    value: \"cname\"\n                },\n                {\n                    text: \"TTL\",\n                    align: \"left\",\n                    sortable: true,\n                    value: \"ttl\"\n                },\n                {\n                    text: \"Default\",\n                    align: \"left\",\n                    sortable: false,\n                    value: \"default\"\n                },\n                {\n                    text: \"Actions\",\n                    align: \"left\",\n                    sortable: false,\n                    width: \"200px\"\n                }\n            ],\n            cdn: {}\n        };\n    },\n    methods: {\n        getAllCDNs: function() {\n            this.$store.dispatch(\"global/startLoading\");\n            this.$store\n                .dispatch(\"domains/getAllCDNs\", this.tab.domain_id)\n                .then(\n                    function(result) {\n                        this.filterData = result.data;\n                        this.cdn.domain_id = this.tab.domain_id;\n                        this.setPages();\n                        this.$store.dispatch(\"global/finishLoading\");\n                    }.bind(this)\n                )\n                .catch(\n                    function(error) {\n                        this.$store.dispatch(\"global/finishLoading\");\n                        this.$store.dispatch(\n                            \"global/showSnackbarError\",\n                            error.message\n                        );\n                    }.bind(this)\n                );\n        },\n        editItem: function(item, type) {\n            this.editedIndex = this.filterData.indexOf(item);\n            this.cdn = Object.assign({}, item);\n            if (type == 0) {\n                this.dialog.edit = true;\n            }\n        },\n        updateCDN: function() {\n            this.cdn.domain_id = this.tab.domain_id;\n            if (this.$refs.editForm.validate()) {\n                this.$store.dispatch(\"global/startLoading\");\n                if (this.editedIndex == -1) {\n                    this.addNewCDN();\n                } else {\n                    if (this.cdn.default == false) {\n                        this.cdn.default = 0;\n                    } else {\n                        this.cdn.default = 1;\n                    }\n                    this.$store.dispatch(\"global/startLoading\");\n                    this.$store\n                        .dispatch(\"domains/updateCDN\", this.cdn)\n                        .then(\n                            function(result) {\n                                this.$store.dispatch(\"global/finishLoading\");\n                                this.getAllCDNs();\n                                this.closeEditDialog();\n                            }.bind(this)\n                        )\n                        .catch(\n                            function(error) {\n                                this.$store.dispatch(\"global/finishLoading\");\n                                this.$store.dispatch(\n                                    \"global/showSnackbarError\",\n                                    error.message\n                                );\n                            }.bind(this)\n                        );\n                }\n            }\n        },\n        addItem: function() {\n            this.$refs.editForm.reset();\n            this.editedIndex = -1;\n            this.dialog.edit = true;\n        },\n        addNewCDN: function() {\n            this.cdn.domain_id = this.tab.domain_id;\n            var vm = this;\n            if (this.$refs.editForm.validate()) {\n                this.$store.dispatch(\"global/startLoading\");\n                this.$store\n                    .dispatch(\"domains/newCDN\", this.cdn)\n                    .then(\n                        function(result) {\n                            this.$store.dispatch(\n                                \"global/showSnackbarSuccess\",\n                                \"Update user success!\"\n                            );\n                            this.getAllCDNs();\n                            this.$store.dispatch(\"global/finishLoading\");\n                        }.bind(this)\n                    )\n                    .catch(\n                        function(error) {\n                            this.$store.dispatch(\n                                \"global/showSnackbarError\",\n                                error.message\n                            );\n                            this.$store.dispatch(\"global/finishLoading\");\n                        }.bind(this)\n                    );\n                this.closeEditDialog();\n            }\n        },\n        closeEditDialog: function() {\n            this.dialog.edit = false;\n        },\n        setPages: function() {\n            if (this.perPage == null || this.filterData == null) {\n                this.pages = null;\n            } else {\n                this.pages = Math.ceil(this.filterData.length / this.perPage);\n            }\n        }\n    },\n    computed: {\n        formTitle() {\n            return this.editedIndex === -1 ? \"New CDN\" : \"Edit CDN\";\n        }\n    },\n    watch: {\n        perPage: function(value) {\n            this.pagination.rowsPerPage = value;\n            this.setPages();\n        },\n        domain_id: function() {\n            this.getAllCDNs();\n        }\n    },\n    mounted() {\n        this.getAllCDNs();\n        console.log(this.editedIndex);\n    }\n};\n</script>\n"],"sourceRoot":"src/components"}]}