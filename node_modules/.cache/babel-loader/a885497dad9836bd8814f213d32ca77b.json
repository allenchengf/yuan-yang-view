{"remainingRequest":"/Users/karen.chen/Desktop/user-module/node_modules/babel-loader/lib/index.js!/Users/karen.chen/Desktop/user-module/node_modules/vuetify-loader/lib/loader.js!/Users/karen.chen/Desktop/user-module/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/karen.chen/Desktop/user-module/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/karen.chen/Desktop/user-module/src/views/Users.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/karen.chen/Desktop/user-module/src/views/Users.vue","mtime":1557453232940},{"path":"/Users/karen.chen/Desktop/user-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/karen.chen/Desktop/user-module/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/karen.chen/Desktop/user-module/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/Users/karen.chen/Desktop/user-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/karen.chen/Desktop/user-module/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"/Users/karen.chen/Desktop/user-module/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\n\nvar _mixins$component$dat;\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport textFieldRules from \"../utils/textFieldRules.js\";\nimport userGroupDetail from \"./UsersGroup\";\nexport default (_mixins$component$dat = {\n  mixins: [textFieldRules],\n  component: {\n    userGroupDetail: userGroupDetail\n  },\n  data: function data() {\n    return {\n      drawer: true,\n      showDetail: false,\n      perPage: 20,\n      pages: 0,\n      searchText: \"\",\n      filterData: [],\n      headers: [{\n        text: \"#\",\n        align: \"left\",\n        sortable: false,\n        width: \"80px\",\n        value: \"id\"\n      }, {\n        text: \"User Group\",\n        align: \"left\",\n        sortable: true,\n        value: \"name\"\n      }, {\n        text: \"Sub-Accounts\",\n        align: \"left\",\n        sortable: true,\n        value: \"subAccounts\"\n      }, {\n        text: \"Status\",\n        align: \"left\",\n        // width: \"100px\",\n        value: \"status\",\n        sortable: true\n      }, {\n        text: \"Actions\",\n        align: \"left\",\n        value: \"action\",\n        width: \"200px\",\n        sortable: true\n      }],\n      pagination: {\n        rowsPerPage: 20\n      },\n      rowsPerPageItems: [{\n        name: \"20 per page\",\n        value: 20\n      }, {\n        name: \"50 per pages\",\n        value: 50\n      }],\n      rawData: [],\n      dialog: {\n        edit: false\n      },\n      error: {\n        status: false,\n        message: \"\"\n      },\n      userInfo: {},\n      editedIndex: -1,\n      groupData: [],\n      operatorAuth: 0,\n      userGroups: []\n    };\n  },\n  watch: {\n    searchText: {\n      deep: true,\n      handler: function handler() {\n        this.filterDataAction();\n      }\n    }\n  },\n  methods: {\n    getAllUsers: function getAllUsers() {\n      this.$store.dispatch(\"global/startLoading\");\n      this.$store.dispatch(\"users/getAll\").then(function (result) {\n        var _this = this;\n\n        this.rawData = result.data;\n        this.rawData.forEach(function (o, i) {\n          _this.userGroups.forEach(function (obj, idx) {\n            if (o.user_group_id == obj.id) {\n              o[\"user_group_name\"] = obj.name;\n            }\n          });\n        });\n        this.handleData();\n        this.setPages();\n        this.$store.dispatch(\"global/finishLoading\");\n      }.bind(this)).catch(function (error) {\n        this.$store.dispatch(\"global/finishLoading\");\n        this.$store.dispatch(\"global/showSnackbarError\", error.message);\n      }.bind(this));\n    },\n    getAllUserGroups: function getAllUserGroups() {\n      this.$store.dispatch(\"global/startLoading\");\n      this.$store.dispatch(\"users/getAllUserGroups\").then(function (result) {\n        this.userGroups = result.data;\n        this.getAllUsers();\n        this.$store.dispatch(\"global/finishLoading\");\n      }.bind(this)).catch(function (error) {\n        this.$store.dispatch(\"global/finishLoading\");\n        this.$store.dispatch(\"global/showSnackbarError\", error.message);\n      }.bind(this));\n    },\n    handleData: function handleData() {\n      var _this2 = this;\n\n      this.groupData = this.userGroups;\n      this.groupData.forEach(function (obj, idx) {\n        obj.childData = [];\n        obj.status = obj.deleted_at == null ? true : false;\n\n        _this2.rawData.forEach(function (o, i) {\n          if (obj.id == o.user_group_id) {\n            obj.childData.push(o);\n          }\n        });\n\n        obj.subAccounts = obj.childData.length;\n      });\n      this.filterData = this.groupData;\n    },\n    filterDataAction: function filterDataAction() {\n      var _this3 = this;\n\n      if (this.searchText != \"\") {\n        this.filterData = this.groupData.filter(function (row) {\n          return !_this3.searchText || row.name.toLowerCase().indexOf(_this3.searchText.toLowerCase()) > -1;\n        });\n      } else {\n        this.filterData = this.groupData;\n      }\n\n      this.setPages();\n    },\n    editItem: function editItem(item, type) {\n      this.editedIndex = this.filterData.indexOf(item);\n      this.userInfo = Object.assign({}, item);\n\n      if (type == 0) {\n        this.dialog.edit = true;\n      }\n    },\n    updateUserGroup: function updateUserGroup() {\n      if (this.$refs.editForm.validate()) {\n        this.$store.dispatch(\"global/startLoading\");\n\n        if (this.editedIndex == -1) {\n          this.addNewUserGroup();\n        } else {\n          this.$store.dispatch(\"global/startLoading\");\n          this.$store.dispatch(\"userGroup/updateUserGroup\", this.userInfo).then(function (result) {\n            this.$store.dispatch(\"global/finishLoading\");\n            this.getAllUserGroups();\n            this.closeEditDialog();\n          }.bind(this)).catch(function (error) {\n            this.$store.dispatch(\"global/finishLoading\");\n            this.$store.dispatch(\"global/showSnackbarError\", error.message);\n          }.bind(this));\n        }\n      }\n    },\n    addItem: function addItem() {\n      this.$refs.editForm.reset();\n      this.editedIndex = -1;\n      this.dialog.edit = true;\n    },\n    addNewUserGroup: function addNewUserGroup() {\n      var vm = this;\n\n      if (this.$refs.editForm.validate()) {\n        this.$store.dispatch(\"global/startLoading\");\n        this.$store.dispatch(\"userGroup/newUserGroup\", this.userInfo).then(function (result) {\n          this.$store.dispatch(\"global/showSnackbarSuccess\", \"Update user success!\");\n          this.getAllUserGroups();\n          this.$store.dispatch(\"global/finishLoading\");\n        }.bind(this)).catch(function (error) {\n          this.$store.dispatch(\"global/showSnackbarError\", error.message);\n          this.$store.dispatch(\"global/finishLoading\");\n        }.bind(this));\n        this.closeEditDialog();\n      }\n    },\n    closeEditDialog: function closeEditDialog() {\n      this.dialog.edit = false;\n    },\n    setPages: function setPages() {\n      if (this.perPage == null || this.filterData == null) {\n        this.pages = null;\n      } else {\n        this.pages = Math.ceil(this.filterData.length / this.perPage);\n      }\n    }\n  },\n  computed: {\n    formTitle: function formTitle() {\n      return this.editedIndex === -1 ? \"New User Group\" : \"Edit User Group\";\n    }\n  }\n}, _defineProperty(_mixins$component$dat, \"watch\", {\n  searchText: function searchText(value) {\n    this.filterDataAction();\n  },\n  perPage: function perPage(value) {\n    this.pagination.rowsPerPage = value;\n    this.setPages();\n  }\n}), _defineProperty(_mixins$component$dat, \"mounted\", function mounted() {\n  this.$router.push(\"/userGroup\");\n  this.getAllUserGroups();\n}), _defineProperty(_mixins$component$dat, \"created\", function created() {\n  this.getAllUserGroups();\n}), _mixins$component$dat);",{"version":3,"sources":["Users.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang=\"pug\">\n    v-container#users\n        v-layout(wrap column)\n            v-flex(xs12)\n                .title.text-xs-left.mb-4 Users Group Management\n            v-flex(xs12)\n                v-card\n                    v-card-title\n                        v-layout(row align-center)\n                            //- v-flex.px-2(xs12 sm6 md2)\n                            //-     v-select.pt-0.mt-0(v-model=\"perPage\" :items=\"rowsPerPageItems\" item-text=\"name\" item-value=\"value\" hide-details)\n                            v-flex.px-2(xs12 sm6 md3)\n                                v-text-field.pt-0.mt-0(v-model=\"searchText\" append-icon=\"search\" label=\"Search\" single-line hide-details)\n                            v-spacer\n                            v-btn(color=\"blue-grey lighten-2\" dark @click=\"addItem\") Add User Group\n                    v-data-table.elevation-1(:headers=\"headers\" :items=\"filterData\" :loading=\"$store.state.global.isLoading\" :pagination.sync=\"pagination\"  hide-actions)\n                        v-progress-linear(v-slot:progress color=\"blue-grey lighten-2\")\n                        template(slot=\"items\" slot-scope=\"props\")\n                            tr(:class=\"props.item.status? '': 'grey--text'\")\n                                td.text-xs-left {{props.index +1}}\n                                td.text-xs-left() \n                                    .name.font-weight-medium {{props.item.name}}\n                                td.text-xs-left {{(props.item.subAccounts == undefined)? '0' : props.item.subAccounts}}\n                                td.text-xs-left {{(props.item.status)? 'acive' : 'inactive'}}\n                                td.text-xs-left\n                                    v-btn.ma-0(flat icon small color=\"blue-grey darken-1\" @click=\"editItem(props.item, 0)\" title=\"edit user\" :disabled=\"!props.item.status\" v-if=\"props.item.user_type != 'origin'\")\n                                        v-icon(small) edit\n                                    v-btn(color=\"blue-grey darken-1\" dark small outline :to=\"{ name: 'userGroupDetail', query :{ data:props.item } }\") More\n                    v-layout.px-2(row align-center)\n                        v-flex.text-xs-left.py-3(xs4)\n                            //- b.total-items total: {{filterData.length}} \n                        v-flex.text-xs-right.py-3(xs8)\n                            v-pagination(v-model=\"pagination.page\" :length=\"pages\" :total-visible=\"7\" color=\"blue-grey lighten-2\")\n        //- Dialogs\n        v-dialog.edit-dialog(v-model=\"dialog.edit\" max-width=\"460\" persistent)\n            v-card\n                v-card-title.title {{formTitle}}\n                v-card-text\n                    v-form(ref=\"editForm\")\n                        v-text-field(v-model=\"userInfo.name\" label=\"Name\" type=\"text\" name=\"name\" :rules=\"[rules.required]\")\n                        v-text-field(v-model=\"userInfo.unique_id\" label=\"Unique Id\" type=\"text\" name=\"unique_id\")\n                        v-alert.text-md-left(:value=\"error.status\" color=\"error\" icon=\"warning\" outline transition=\"scale-transition\") {{error.message}}\n                v-card-actions  \n                    v-spacer\n                    v-btn(color=\"grey\" flat=\"flat\" @click=\"closeEditDialog\") Cancel\n                    v-btn(color=\"blue-grey darken-2\" flat=\"flat\" @click=\"updateUserGroup\") Save\n</template>\n\n\n<script>\nimport textFieldRules from \"../utils/textFieldRules.js\";\nimport userGroupDetail from \"./UsersGroup\";\n\nexport default {\n    mixins: [textFieldRules],\n\n    component: {\n        userGroupDetail\n    },\n    data() {\n        return {\n            drawer: true,\n            showDetail: false,\n            perPage: 20,\n            pages: 0,\n            searchText: \"\",\n            filterData: [],\n            headers: [\n                {\n                    text: \"#\",\n                    align: \"left\",\n                    sortable: false,\n                    width: \"80px\",\n                    value: \"id\"\n                },\n                {\n                    text: \"User Group\",\n                    align: \"left\",\n                    sortable: true,\n                    value: \"name\"\n                },\n                {\n                    text: \"Sub-Accounts\",\n                    align: \"left\",\n                    sortable: true,\n                    value: \"subAccounts\"\n                },\n                {\n                    text: \"Status\",\n                    align: \"left\",\n                    // width: \"100px\",\n                    value: \"status\",\n                    sortable: true\n                },\n                {\n                    text: \"Actions\",\n                    align: \"left\",\n                    value: \"action\",\n                    width: \"200px\",\n                    sortable: true\n                }\n            ],\n            pagination: {\n                rowsPerPage: 20\n            },\n            rowsPerPageItems: [\n                { name: \"20 per page\", value: 20 },\n                { name: \"50 per pages\", value: 50 }\n            ],\n            rawData: [],\n            dialog: {\n                edit: false\n            },\n            error: {\n                status: false,\n                message: \"\"\n            },\n            userInfo: {},\n            editedIndex: -1,\n            groupData: [],\n            operatorAuth: 0,\n            userGroups: []\n        };\n    },\n    watch: {\n        searchText: {\n            deep: true,\n            handler: function() {\n                this.filterDataAction();\n            }\n        }\n    },\n    methods: {\n        getAllUsers: function() {\n            this.$store.dispatch(\"global/startLoading\");\n            this.$store\n                .dispatch(\"users/getAll\")\n                .then(\n                    function(result) {\n                        this.rawData = result.data;\n                        this.rawData.forEach((o, i) => {\n                            this.userGroups.forEach((obj, idx) => {\n                                if (o.user_group_id == obj.id) {\n                                    o[\"user_group_name\"] = obj.name;\n                                }\n                            });\n                        });\n                        this.handleData();\n                        this.setPages();\n                        this.$store.dispatch(\"global/finishLoading\");\n                    }.bind(this)\n                )\n                .catch(\n                    function(error) {\n                        this.$store.dispatch(\"global/finishLoading\");\n                        this.$store.dispatch(\n                            \"global/showSnackbarError\",\n                            error.message\n                        );\n                    }.bind(this)\n                );\n        },\n        getAllUserGroups: function() {\n            this.$store.dispatch(\"global/startLoading\");\n            this.$store\n                .dispatch(\"users/getAllUserGroups\")\n                .then(\n                    function(result) {\n                        this.userGroups = result.data;\n                        this.getAllUsers();\n                        this.$store.dispatch(\"global/finishLoading\");\n                    }.bind(this)\n                )\n                .catch(\n                    function(error) {\n                        this.$store.dispatch(\"global/finishLoading\");\n                        this.$store.dispatch(\n                            \"global/showSnackbarError\",\n                            error.message\n                        );\n                    }.bind(this)\n                );\n        },\n        handleData: function() {\n            this.groupData = this.userGroups;\n            this.groupData.forEach((obj, idx) => {\n                obj.childData = [];\n                obj.status = obj.deleted_at == null ? true : false;\n                this.rawData.forEach((o, i) => {\n                    if (obj.id == o.user_group_id) {\n                        obj.childData.push(o);\n                    }\n                });\n                obj.subAccounts = obj.childData.length;\n            });\n            this.filterData = this.groupData;\n        },\n\n        filterDataAction: function() {\n            if (this.searchText != \"\") {\n                this.filterData = this.groupData.filter(row => {\n                    return (\n                        !this.searchText ||\n                        row.name\n                            .toLowerCase()\n                            .indexOf(this.searchText.toLowerCase()) > -1\n                    );\n                });\n            } else {\n                this.filterData = this.groupData;\n            }\n            this.setPages();\n        },\n        editItem: function(item, type) {\n            this.editedIndex = this.filterData.indexOf(item);\n            this.userInfo = Object.assign({}, item);\n            if (type == 0) {\n                this.dialog.edit = true;\n            }\n        },\n        updateUserGroup: function() {\n            if (this.$refs.editForm.validate()) {\n                this.$store.dispatch(\"global/startLoading\");\n                if (this.editedIndex == -1) {\n                    this.addNewUserGroup();\n                } else {\n                    this.$store.dispatch(\"global/startLoading\");\n                    this.$store\n                        .dispatch(\"userGroup/updateUserGroup\", this.userInfo)\n                        .then(\n                            function(result) {\n                                this.$store.dispatch(\"global/finishLoading\");\n                                this.getAllUserGroups();\n                                this.closeEditDialog();\n                            }.bind(this)\n                        )\n                        .catch(\n                            function(error) {\n                                this.$store.dispatch(\"global/finishLoading\");\n                                this.$store.dispatch(\n                                    \"global/showSnackbarError\",\n                                    error.message\n                                );\n                            }.bind(this)\n                        );\n                }\n            }\n        },\n        addItem: function() {\n            this.$refs.editForm.reset();\n            this.editedIndex = -1;\n            this.dialog.edit = true;\n        },\n        addNewUserGroup: function() {\n            var vm = this;\n            if (this.$refs.editForm.validate()) {\n                this.$store.dispatch(\"global/startLoading\");\n                this.$store\n                    .dispatch(\"userGroup/newUserGroup\", this.userInfo)\n                    .then(\n                        function(result) {\n                            this.$store.dispatch(\n                                \"global/showSnackbarSuccess\",\n                                \"Update user success!\"\n                            );\n                            this.getAllUserGroups();\n                            this.$store.dispatch(\"global/finishLoading\");\n                        }.bind(this)\n                    )\n                    .catch(\n                        function(error) {\n                            this.$store.dispatch(\n                                \"global/showSnackbarError\",\n                                error.message\n                            );\n                            this.$store.dispatch(\"global/finishLoading\");\n                        }.bind(this)\n                    );\n                this.closeEditDialog();\n            }\n        },\n        closeEditDialog: function() {\n            this.dialog.edit = false;\n        },\n        setPages: function() {\n            if (this.perPage == null || this.filterData == null) {\n                this.pages = null;\n            } else {\n                this.pages = Math.ceil(this.filterData.length / this.perPage);\n            }\n        }\n    },\n    computed: {\n        formTitle() {\n            return this.editedIndex === -1\n                ? \"New User Group\"\n                : \"Edit User Group\";\n        }\n    },\n    watch: {\n        searchText: function(value) {\n            this.filterDataAction();\n        },\n        perPage: function(value) {\n            this.pagination.rowsPerPage = value;\n            this.setPages();\n        }\n    },\n    mounted() {\n        this.$router.push(\"/userGroup\");\n        this.getAllUserGroups();\n    },\n    created() {\n        this.getAllUserGroups();\n    }\n};\n</script>\n\n<style lang=\"sass\" scoped>\n.child-table\n    tr  \n        background-color: #F5F5F5\n    tr:hover\n        background-color: #E0E0E0 !important\n</style>"],"sourceRoot":"src/views"}]}