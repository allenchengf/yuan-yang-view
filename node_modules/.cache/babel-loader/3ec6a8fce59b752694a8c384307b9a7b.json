{"remainingRequest":"/Users/karen.chen/Desktop/yuan-yang-view/node_modules/babel-loader/lib/index.js!/Users/karen.chen/Desktop/yuan-yang-view/node_modules/vuetify-loader/lib/loader.js!/Users/karen.chen/Desktop/yuan-yang-view/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/karen.chen/Desktop/yuan-yang-view/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/karen.chen/Desktop/yuan-yang-view/src/views/UsersGroup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/karen.chen/Desktop/yuan-yang-view/src/views/UsersGroup.vue","mtime":1557469527905},{"path":"/Users/karen.chen/Desktop/yuan-yang-view/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/karen.chen/Desktop/yuan-yang-view/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/karen.chen/Desktop/yuan-yang-view/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/Users/karen.chen/Desktop/yuan-yang-view/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/karen.chen/Desktop/yuan-yang-view/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport UsersTable from \"../components/UsersTable\";\nimport textFieldRules from \"../utils/textFieldRules.js\";\nimport { mapMutations } from \"vuex\";\nexport default {\n  mixins: [textFieldRules],\n  name: \"userGroupDetail\",\n  components: {\n    UsersTable: UsersTable\n  },\n  data: function data() {\n    return {\n      groupData: [],\n      rawData: [],\n      headers: [{\n        text: \"#\",\n        align: \"left\",\n        sortable: false,\n        width: \"80px\",\n        value: \"id\"\n      }, {\n        text: \"Product Name\",\n        align: \"left\",\n        sortable: true,\n        value: \"name\"\n      }, {\n        text: \"Status\",\n        align: \"left\",\n        sortable: true,\n        value: \"status\"\n      }, {\n        text: \"Action\",\n        align: \"left\",\n        value: \"user_type\",\n        width: \"100px\",\n        sortable: true\n      }],\n      key: \"\",\n      dialogShow: false,\n      authItem: null\n    };\n  },\n  methods: {\n    getUserGroup: function getUserGroup() {\n      this.rawData = this.groupData.childData;\n      this.rawData.forEach(function (o, i) {\n        o.status = o.deleted_at == null ? true : false;\n      });\n      this.$store.dispatch(\"global/startLoading\");\n      this.$store.dispatch(\"users/getUsersByGroup\", this.groupData.id).then(function (result) {\n        this.rawData = result.data;\n        this.$store.dispatch(\"global/finishLoading\");\n      }.bind(this)).catch(function (error) {\n        this.$store.dispatch(\"global/finishLoading\");\n        this.$store.dispatch(\"global/showSnackbarError\", error.message);\n      }.bind(this));\n    },\n    updateGroupStatus: function updateGroupStatus() {\n      this.$store.dispatch(\"global/startLoading\");\n      this.$store.dispatch(\"userGroup/updateGroupStatus\", this.groupData).then(function (result) {\n        this.$store.dispatch(\"global/showSnackbarSuccess\", \"Change group status success!\");\n        this.groupData.status = !this.groupData.status;\n        this.getUserGroup();\n      }.bind(this)).catch(function (error) {\n        this.$store.dispatch(\"global/showSnackbarError\", error.message);\n      }.bind(this));\n    },\n    backToGroup: function backToGroup() {\n      this.$router.push(\"/admin/userGroup\");\n      this.getUserGroup();\n    }\n  },\n  mounted: function mounted() {\n    this.$router.push(\"/admin/userGroupDetail\");\n    this.getUserGroup();\n  },\n  created: function created() {\n    this.groupData = this.$route.query.data;\n    this.getUserGroup();\n  }\n};",{"version":3,"sources":["UsersGroup.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang=\"pug\">\n    v-container#users\n        v-layout(wrap column)\n            v-flex(xs12)\n                v-layout.mb-4(row align-center)\n                    a.text--grey(@click=\"backToGroup\")\n                        span \n                            v-icon keyboard_arrow_left\n                    span.title Edit Users Group\n                    v-spacer\n                    v-btn(color=\"red lighten-2\" dark @click=\"updateGroupStatus()\" v-if=\"groupData.status == true\") Inactive Group\n                    v-btn(color=\"primary\" dark @click=\"updateGroupStatus()\" v-else) Active Group\n\n            v-flex(xs12)\n                UsersTable.mb-3(:raw-data=\"rawData\" :user-group-id=\"groupData.id\" :status=\"groupData.status\" :refresh-data=\"getUserGroup\")\n            \n</template>\n\n\n<script>\nimport UsersTable from \"../components/UsersTable\";\nimport textFieldRules from \"../utils/textFieldRules.js\";\nimport { mapMutations } from \"vuex\";\n\nexport default {\n    mixins: [textFieldRules],\n    name: \"userGroupDetail\",\n    components: {\n        UsersTable\n    },\n    data() {\n        return {\n            groupData: [],\n            rawData: [],\n            headers: [\n                {\n                    text: \"#\",\n                    align: \"left\",\n                    sortable: false,\n                    width: \"80px\",\n                    value: \"id\"\n                },\n                {\n                    text: \"Product Name\",\n                    align: \"left\",\n                    sortable: true,\n                    value: \"name\"\n                },\n                {\n                    text: \"Status\",\n                    align: \"left\",\n                    sortable: true,\n                    value: \"status\"\n                },\n                {\n                    text: \"Action\",\n                    align: \"left\",\n                    value: \"user_type\",\n                    width: \"100px\",\n                    sortable: true\n                }\n            ],\n            key: \"\",\n            dialogShow: false,\n            authItem: null\n        };\n    },\n    methods: {\n        getUserGroup: function() {\n            this.rawData = this.groupData.childData;\n            this.rawData.forEach((o, i) => {\n                o.status = o.deleted_at == null ? true : false;\n            });\n            this.$store.dispatch(\"global/startLoading\");\n            this.$store\n                .dispatch(\"users/getUsersByGroup\", this.groupData.id)\n                .then(\n                    function(result) {\n                        this.rawData = result.data;\n                        this.$store.dispatch(\"global/finishLoading\");\n                    }.bind(this)\n                )\n                .catch(\n                    function(error) {\n                        this.$store.dispatch(\"global/finishLoading\");\n                        this.$store.dispatch(\n                            \"global/showSnackbarError\",\n                            error.message\n                        );\n                    }.bind(this)\n                );\n        },\n        updateGroupStatus: function() {\n            this.$store.dispatch(\"global/startLoading\");\n            this.$store\n                .dispatch(\"userGroup/updateGroupStatus\", this.groupData)\n                .then(\n                    function(result) {\n                        this.$store.dispatch(\n                            \"global/showSnackbarSuccess\",\n                            \"Change group status success!\"\n                        );\n                        this.groupData.status = !this.groupData.status;\n                        this.getUserGroup();\n                    }.bind(this)\n                )\n                .catch(\n                    function(error) {\n                        this.$store.dispatch(\n                            \"global/showSnackbarError\",\n                            error.message\n                        );\n                    }.bind(this)\n                );\n        },\n        backToGroup() {\n            this.$router.push(\"/admin/userGroup\");\n            this.getUserGroup();\n        }\n    },\n    mounted() {\n        this.$router.push(\"/admin/userGroupDetail\");\n        this.getUserGroup();\n    },\n    created() {\n        this.groupData = this.$route.query.data;\n        this.getUserGroup();\n    }\n};\n</script>\n\n<style lang=\"sass\" scoped>\n</style>"],"sourceRoot":"src/views"}]}