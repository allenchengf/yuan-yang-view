{"remainingRequest":"/Users/karen.chen/Desktop/user-module/node_modules/babel-loader/lib/index.js!/Users/karen.chen/Desktop/user-module/node_modules/eslint-loader/index.js??ref--13-0!/Users/karen.chen/Desktop/user-module/src/store/modules/userGroup.js","dependencies":[{"path":"/Users/karen.chen/Desktop/user-module/src/store/modules/userGroup.js","mtime":1556851110571},{"path":"/Users/karen.chen/Desktop/user-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/karen.chen/Desktop/user-module/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/karen.chen/Desktop/user-module/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport axios from \"axios\";\nexport default {\n  namespaced: true,\n  state: {\n    users: []\n  },\n  getters: {},\n  mutations: {\n    updateUsers: function updateUsers(state, users) {\n      state.users = users;\n    }\n  },\n  actions: {\n    // getAll: context => {\n    //     return axios\n    //         .get(\"user_module/users/all\")\n    //         .then(function(response) {\n    //             response.data.data.forEach((o, i) => {\n    //                 if (o.user_group_id == 1) {\n    //                     o[\"user_type\"] = \"hiero7\";\n    //                 } else if (o.user_group_id !== 1 && o.level == 1) {\n    //                     o[\"user_type\"] = \"admin\";\n    //                 } else {\n    //                     o[\"user_type\"] = \"user\";\n    //                 }\n    //             });\n    //             return Promise.resolve(response.data);\n    //         })\n    //         .catch(function(error) {\n    //             return Promise.reject(error.response.data);\n    //         });\n    // },\n    // getUsers: context => {\n    //     return axios\n    //         .get(\"user_module/users\")\n    //         .then(function(response) {\n    //             response.data.data.forEach((o, i) => {\n    //                 if (o.user_group_id == 1) {\n    //                     o[\"user_type\"] = \"hiero7\";\n    //                 } else if (o.user_group_id !== 1 && o.level == 1) {\n    //                     o[\"user_type\"] = \"admin\";\n    //                 } else {\n    //                     o[\"user_type\"] = \"user\";\n    //                 }\n    //             });\n    //             context.commit(\"updateUsers\", response.data.data);\n    //             return Promise.resolve(response.data);\n    //         })\n    //         .catch(function(error) {\n    //             return Promise.reject(error.response.data);\n    //         });\n    // },\n    // getUsersByGroup: (context, groupId) => {\n    //     return axios\n    //         .get(\"user_module/users/\" + groupId + \"/group\")\n    //         .then(function(response) {\n    //             return Promise.resolve(response.data);\n    //         })\n    //         .catch(function(error) {\n    //             return Promise.reject(error.response.data);\n    //         });\n    // },\n    // getAllUserGroups: context => {\n    //     return axios\n    //         .get(\"user_module/userGroups\")\n    //         .then(function(response) {\n    //             return Promise.resolve(response.data);\n    //         })\n    //         .catch(function(error) {\n    //             return Promise.reject(error.response.data);\n    //         });\n    // },\n    // getUserProfile: (context, uid) => {\n    //     return axios\n    //         .get(\"user_module/users/\" + uid + \"/profile\")\n    //         .then(function(response) {\n    //             return Promise.resolve(response.data);\n    //         })\n    //         .catch(function(error) {\n    //             return Promise.reject(error.response.data);\n    //         });\n    // },\n    // updateUserProfile: (context, data) => {\n    //     return axios\n    //         .put(\"user_module/users/\" + data.uid + \"/profile\", data)\n    //         .then(function(response) {\n    //             return Promise.resolve(response.data);\n    //         })\n    //         .catch(function(error) {\n    //             return Promise.reject(error.response.data);\n    //         });\n    // },\n    updateUserGroup: function updateUserGroup(context, data) {\n      return axios.put(\"user_module/userGroups/\" + data.id, {\n        name: data.name,\n        unique_id: data.unique_id\n      }).then(function (response) {\n        return Promise.resolve(response.data);\n      }).catch(function (error) {\n        return Promise.reject(error.response.data);\n      });\n    },\n    updateGroupStatus: function updateGroupStatus(context, data) {\n      return axios.put(\"user_module/userGroups/\" + data.id + \"/status\", {\n        status: !data.status\n      }).then(function (response) {\n        return Promise.resolve(response.data);\n      }).catch(function (error) {\n        return Promise.reject(error.response.data);\n      });\n    },\n    newUserGroup: function newUserGroup(context, data) {\n      return axios.post(\"user_module/userGroups\", data).then(function (response) {\n        return Promise.resolve(response.data);\n      }).catch(function (error) {\n        return Promise.reject(error.response.data);\n      });\n    }\n  }\n};",{"version":3,"sources":["/Users/karen.chen/Desktop/user-module/src/store/modules/userGroup.js"],"names":["axios","namespaced","state","users","getters","mutations","updateUsers","actions","updateUserGroup","context","data","put","id","name","unique_id","then","response","Promise","resolve","catch","error","reject","updateGroupStatus","status","newUserGroup","post"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe;AACXC,EAAAA,UAAU,EAAE,IADD;AAEXC,EAAAA,KAAK,EAAE;AACHC,IAAAA,KAAK,EAAE;AADJ,GAFI;AAKXC,EAAAA,OAAO,EAAE,EALE;AAMXC,EAAAA,SAAS,EAAE;AACPC,IAAAA,WAAW,EAAE,qBAACJ,KAAD,EAAQC,KAAR,EAAkB;AAC3BD,MAAAA,KAAK,CAACC,KAAN,GAAcA,KAAd;AACH;AAHM,GANA;AAWXI,EAAAA,OAAO,EAAE;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,IAAAA,eAAe,EAAE,yBAACC,OAAD,EAAUC,IAAV,EAAmB;AAChC,aAAOV,KAAK,CACPW,GADE,CACE,4BAA4BD,IAAI,CAACE,EADnC,EACuC;AACtCC,QAAAA,IAAI,EAAEH,IAAI,CAACG,IAD2B;AAEtCC,QAAAA,SAAS,EAAEJ,IAAI,CAACI;AAFsB,OADvC,EAKFC,IALE,CAKG,UAASC,QAAT,EAAmB;AACrB,eAAOC,OAAO,CAACC,OAAR,CAAgBF,QAAQ,CAACN,IAAzB,CAAP;AACH,OAPE,EAQFS,KARE,CAQI,UAASC,KAAT,EAAgB;AACnB,eAAOH,OAAO,CAACI,MAAR,CAAeD,KAAK,CAACJ,QAAN,CAAeN,IAA9B,CAAP;AACH,OAVE,CAAP;AAWH,KA7FI;AA8FLY,IAAAA,iBAAiB,EAAE,2BAACb,OAAD,EAAUC,IAAV,EAAmB;AAClC,aAAOV,KAAK,CACPW,GADE,CACE,4BAA4BD,IAAI,CAACE,EAAjC,GAAsC,SADxC,EACmD;AAClDW,QAAAA,MAAM,EAAE,CAACb,IAAI,CAACa;AADoC,OADnD,EAIFR,IAJE,CAIG,UAASC,QAAT,EAAmB;AACrB,eAAOC,OAAO,CAACC,OAAR,CAAgBF,QAAQ,CAACN,IAAzB,CAAP;AACH,OANE,EAOFS,KAPE,CAOI,UAASC,KAAT,EAAgB;AACnB,eAAOH,OAAO,CAACI,MAAR,CAAeD,KAAK,CAACJ,QAAN,CAAeN,IAA9B,CAAP;AACH,OATE,CAAP;AAUH,KAzGI;AA0GLc,IAAAA,YAAY,EAAE,sBAACf,OAAD,EAAUC,IAAV,EAAmB;AAC7B,aAAOV,KAAK,CACPyB,IADE,CACG,wBADH,EAC6Bf,IAD7B,EAEFK,IAFE,CAEG,UAASC,QAAT,EAAmB;AACrB,eAAOC,OAAO,CAACC,OAAR,CAAgBF,QAAQ,CAACN,IAAzB,CAAP;AACH,OAJE,EAKFS,KALE,CAKI,UAASC,KAAT,EAAgB;AACnB,eAAOH,OAAO,CAACI,MAAR,CAAeD,KAAK,CAACJ,QAAN,CAAeN,IAA9B,CAAP;AACH,OAPE,CAAP;AAQH;AAnHI;AAXE,CAAf","sourcesContent":["import axios from \"axios\";\n\nexport default {\n    namespaced: true,\n    state: {\n        users: []\n    },\n    getters: {},\n    mutations: {\n        updateUsers: (state, users) => {\n            state.users = users;\n        }\n    },\n    actions: {\n        // getAll: context => {\n        //     return axios\n        //         .get(\"user_module/users/all\")\n        //         .then(function(response) {\n        //             response.data.data.forEach((o, i) => {\n        //                 if (o.user_group_id == 1) {\n        //                     o[\"user_type\"] = \"hiero7\";\n        //                 } else if (o.user_group_id !== 1 && o.level == 1) {\n        //                     o[\"user_type\"] = \"admin\";\n        //                 } else {\n        //                     o[\"user_type\"] = \"user\";\n        //                 }\n        //             });\n        //             return Promise.resolve(response.data);\n        //         })\n        //         .catch(function(error) {\n        //             return Promise.reject(error.response.data);\n        //         });\n        // },\n        // getUsers: context => {\n        //     return axios\n        //         .get(\"user_module/users\")\n        //         .then(function(response) {\n        //             response.data.data.forEach((o, i) => {\n        //                 if (o.user_group_id == 1) {\n        //                     o[\"user_type\"] = \"hiero7\";\n        //                 } else if (o.user_group_id !== 1 && o.level == 1) {\n        //                     o[\"user_type\"] = \"admin\";\n        //                 } else {\n        //                     o[\"user_type\"] = \"user\";\n        //                 }\n        //             });\n        //             context.commit(\"updateUsers\", response.data.data);\n\n        //             return Promise.resolve(response.data);\n        //         })\n        //         .catch(function(error) {\n        //             return Promise.reject(error.response.data);\n        //         });\n        // },\n        // getUsersByGroup: (context, groupId) => {\n        //     return axios\n        //         .get(\"user_module/users/\" + groupId + \"/group\")\n        //         .then(function(response) {\n        //             return Promise.resolve(response.data);\n        //         })\n        //         .catch(function(error) {\n        //             return Promise.reject(error.response.data);\n        //         });\n        // },\n        // getAllUserGroups: context => {\n        //     return axios\n        //         .get(\"user_module/userGroups\")\n        //         .then(function(response) {\n        //             return Promise.resolve(response.data);\n        //         })\n        //         .catch(function(error) {\n        //             return Promise.reject(error.response.data);\n        //         });\n        // },\n        // getUserProfile: (context, uid) => {\n        //     return axios\n        //         .get(\"user_module/users/\" + uid + \"/profile\")\n        //         .then(function(response) {\n        //             return Promise.resolve(response.data);\n        //         })\n        //         .catch(function(error) {\n        //             return Promise.reject(error.response.data);\n        //         });\n        // },\n        // updateUserProfile: (context, data) => {\n        //     return axios\n        //         .put(\"user_module/users/\" + data.uid + \"/profile\", data)\n        //         .then(function(response) {\n        //             return Promise.resolve(response.data);\n        //         })\n        //         .catch(function(error) {\n        //             return Promise.reject(error.response.data);\n        //         });\n        // },\n        updateUserGroup: (context, data) => {\n            return axios\n                .put(\"user_module/userGroups/\" + data.id, {\n                    name: data.name,\n                    unique_id: data.unique_id\n                })\n                .then(function(response) {\n                    return Promise.resolve(response.data);\n                })\n                .catch(function(error) {\n                    return Promise.reject(error.response.data);\n                });\n        },\n        updateGroupStatus: (context, data) => {\n            return axios\n                .put(\"user_module/userGroups/\" + data.id + \"/status\", {\n                    status: !data.status\n                })\n                .then(function(response) {\n                    return Promise.resolve(response.data);\n                })\n                .catch(function(error) {\n                    return Promise.reject(error.response.data);\n                });\n        },\n        newUserGroup: (context, data) => {\n            return axios\n                .post(\"user_module/userGroups\", data)\n                .then(function(response) {\n                    return Promise.resolve(response.data);\n                })\n                .catch(function(error) {\n                    return Promise.reject(error.response.data);\n                });\n        }\n    }\n};\n"]}]}