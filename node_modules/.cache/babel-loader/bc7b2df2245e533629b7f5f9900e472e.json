{"remainingRequest":"/Users/karen.chen/Desktop/yuan-yang-view/node_modules/babel-loader/lib/index.js!/Users/karen.chen/Desktop/yuan-yang-view/node_modules/eslint-loader/index.js??ref--13-0!/Users/karen.chen/Desktop/yuan-yang-view/src/store/modules/account.js","dependencies":[{"path":"/Users/karen.chen/Desktop/yuan-yang-view/src/store/modules/account.js","mtime":1557471341127},{"path":"/Users/karen.chen/Desktop/yuan-yang-view/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/karen.chen/Desktop/yuan-yang-view/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/karen.chen/Desktop/yuan-yang-view/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from \"vue\";\nimport axios from \"axios\";\nimport router from \"../../router\";\nexport default {\n  namespaced: true,\n  // -----------------------------------------------------------------\n  state: {\n    userType: {\n      hiero7: {\n        auth: 2\n      },\n      admin: {\n        auth: 1\n      },\n      user: {\n        auth: 0\n      }\n    },\n    account: {}\n  },\n  // -----------------------------------------------------------------\n  getters: {\n    // getters and computed props on the users data\n    account: function account(state) {\n      return function () {\n        var user = JSON.parse(localStorage.getItem(\"user\"));\n        return user;\n      };\n    },\n    accountId: function accountId(state) {\n      return function () {\n        var user = JSON.parse(localStorage.getItem(\"user\"));\n        return user.uid;\n      };\n    },\n    accountAuth: function accountAuth(state) {\n      return function () {\n        var user = JSON.parse(localStorage.getItem(\"user\"));\n\n        if (user.user_group_id == 1) {\n          user[\"user_type\"] = \"hiero7\";\n        } else if (user.user_group_id != 1 && user.level == 1) {\n          user[\"user_type\"] = \"admin\";\n        } else {\n          user[\"user_type\"] = \"user\";\n        }\n\n        var type = user.user_type;\n        return state.userType[type].auth;\n      };\n    },\n    accountGroupId: function accountGroupId(state) {\n      return function () {\n        var user = JSON.parse(localStorage.getItem(\"user\"));\n        return user.user_group_id;\n      };\n    }\n  },\n  // -----------------------------------------------------------------\n  mutations: {\n    // stuff to set users data locally\n    updateAccountInfo: function updateAccountInfo(state, account) {\n      Vue.set(state, \"account\", account);\n      localStorage.setItem(\"user\", JSON.stringify(account));\n    },\n    updateAccountToken: function updateAccountToken(state, token) {\n      localStorage.setItem(\"token\", token);\n    }\n  },\n  // -----------------------------------------------------------------\n  actions: {\n    getProfile: function getProfile(context) {\n      return axios.get(\"user_module/users/self\").then(function (response) {\n        context.commit(\"updateAccountInfo\", response.data.data);\n        return Promise.resolve(response.data);\n      }).catch(function (error) {\n        return Promise.reject(error.response.data);\n      });\n    },\n    updateToken: function updateToken(context, token) {\n      context.commit(\"updateAccountToken\", token);\n    },\n    logout: function logout(context) {\n      context.commit(\"updateAccountInfo\", null);\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"user\"); // router push to login page\n\n      router.push(\"/logout?message=\" + \"sign out success.\" + \"&type=success\"); // return axios\n      //     .get(\"user_module/logout\")\n      //     .then(function(response) {\n      //         context.commit(\"updateAccountInfo\", null);\n      //         localStorage.removeItem(\"token\");\n      //         localStorage.removeItem(\"user\");\n      //         return Promise.resolve(response.data);\n      //     })\n      //     .catch(function(error) {\n      //         return Promise.reject(error.response.data);\n      //     });\n    }\n  }\n};",{"version":3,"sources":["/Users/karen.chen/Desktop/yuan-yang-view/src/store/modules/account.js"],"names":["Vue","axios","router","namespaced","state","userType","hiero7","auth","admin","user","account","getters","JSON","parse","localStorage","getItem","accountId","uid","accountAuth","user_group_id","level","type","user_type","accountGroupId","mutations","updateAccountInfo","set","setItem","stringify","updateAccountToken","token","actions","getProfile","context","get","then","response","commit","data","Promise","resolve","catch","error","reject","updateToken","logout","removeItem","push"],"mappings":"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","sourcesContent":["import Vue from \"vue\";\nimport axios from \"axios\";\nimport router from \"../../router\";\n\nexport default {\n    namespaced: true,\n    // -----------------------------------------------------------------\n    state: {\n        userType: {\n            hiero7: {\n                auth: 2\n            },\n            admin: {\n                auth: 1\n            },\n            user: {\n                auth: 0\n            }\n        },\n        account: {}\n    },\n    // -----------------------------------------------------------------\n    getters: {\n        // getters and computed props on the users data\n        account: state => () => {\n            var user = JSON.parse(localStorage.getItem(\"user\"));\n            return user;\n        },\n        accountId: state => () => {\n            var user = JSON.parse(localStorage.getItem(\"user\"));\n            return user.uid;\n        },\n        accountAuth: state => () => {\n            var user = JSON.parse(localStorage.getItem(\"user\"));\n            if (user.user_group_id == 1) {\n                user[\"user_type\"] = \"hiero7\";\n            } else if (user.user_group_id != 1 && user.level == 1) {\n                user[\"user_type\"] = \"admin\";\n            } else {\n                user[\"user_type\"] = \"user\";\n            }\n            var type = user.user_type;\n            return state.userType[type].auth;\n        },\n        accountGroupId: state => () => {\n            var user = JSON.parse(localStorage.getItem(\"user\"));\n            return user.user_group_id;\n        }\n    },\n    // -----------------------------------------------------------------\n    mutations: {\n        // stuff to set users data locally\n        updateAccountInfo: (state, account) => {\n            Vue.set(state, \"account\", account);\n            localStorage.setItem(\"user\", JSON.stringify(account));\n        },\n        updateAccountToken: (state, token) => {\n            localStorage.setItem(\"token\", token);\n        }\n    },\n    // -----------------------------------------------------------------\n    actions: {\n        getProfile: context => {\n            return axios\n                .get(\"user_module/users/self\")\n                .then(function(response) {\n                    context.commit(\"updateAccountInfo\", response.data.data);\n                    return Promise.resolve(response.data);\n                })\n                .catch(function(error) {\n                    return Promise.reject(error.response.data);\n                });\n        },\n        updateToken: (context, token) => {\n            context.commit(\"updateAccountToken\", token);\n        },\n        logout: context => {\n            context.commit(\"updateAccountInfo\", null);\n            localStorage.removeItem(\"token\");\n            localStorage.removeItem(\"user\");\n            // router push to login page\n            router.push(\n                \"/logout?message=\" + \"sign out success.\" + \"&type=success\"\n            );\n\n            // return axios\n            //     .get(\"user_module/logout\")\n            //     .then(function(response) {\n            //         context.commit(\"updateAccountInfo\", null);\n            //         localStorage.removeItem(\"token\");\n            //         localStorage.removeItem(\"user\");\n            //         return Promise.resolve(response.data);\n            //     })\n            //     .catch(function(error) {\n            //         return Promise.reject(error.response.data);\n            //     });\n        }\n    }\n};\n"]}]}