{"remainingRequest":"/Users/karen.chen/Desktop/user-module/node_modules/babel-loader/lib/index.js!/Users/karen.chen/Desktop/user-module/node_modules/vuetify-loader/lib/loader.js!/Users/karen.chen/Desktop/user-module/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/karen.chen/Desktop/user-module/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/karen.chen/Desktop/user-module/src/components/UsersTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/karen.chen/Desktop/user-module/src/components/UsersTable.vue","mtime":1557469485972},{"path":"/Users/karen.chen/Desktop/user-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/karen.chen/Desktop/user-module/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/karen.chen/Desktop/user-module/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/Users/karen.chen/Desktop/user-module/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/karen.chen/Desktop/user-module/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/karen.chen/Desktop/user-module/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport textFieldRules from \"../utils/textFieldRules\";\nexport default {\n  mixins: [textFieldRules],\n  props: {\n    rawData: {\n      type: Array\n    },\n    refreshData: {\n      type: Function,\n      default: function _default() {}\n    },\n    userGroupId: {\n      type: Number,\n      default: 0\n    },\n    status: {\n      type: Boolean\n    }\n  },\n  data: function data() {\n    return {\n      user_type: \"\",\n      perPage: 20,\n      pages: 0,\n      searchText: \"\",\n      filterData: [],\n      headers: [{\n        text: \"#\",\n        align: \"left\",\n        sortable: false,\n        width: \"80px\",\n        value: \"id\"\n      }, {\n        text: \"User\",\n        align: \"left\",\n        sortable: true,\n        value: \"name\"\n      }, {\n        text: \"Role\",\n        align: \"left\",\n        value: \"user_type\",\n        width: \"100px\",\n        sortable: true\n      }, // {\n      //     text: \"Email\",\n      //     align: \"left\",\n      //     width: \"200px\",\n      //     value: \"email\",\n      //     sortable: true\n      // },\n      {\n        text: \"Last login time\",\n        align: \"left\",\n        width: \"200px\",\n        value: \"timestamp\",\n        sortable: true\n      }, {\n        text: \"Status\",\n        align: \"left\",\n        width: \"100px\",\n        value: \"status\",\n        sortable: true\n      }, {\n        text: \"Actions\",\n        align: \"left\",\n        value: \"action\",\n        width: \"150px\",\n        sortable: true\n      }],\n      pagination: {\n        rowsPerPage: 20\n      },\n      rowsPerPageItems: [{\n        name: \"20 per page\",\n        value: 20\n      }, {\n        name: \"50 per pages\",\n        value: 50\n      }],\n      products: [],\n      dialog: {\n        edit: false,\n        delete: false,\n        password: false,\n        otp: false\n      },\n      userInfo: {},\n      editedIndex: -1,\n      deleteIndex: -1,\n      roleItems: [{\n        name: \"Admin\",\n        value: \"admin\"\n      }, {\n        name: \"User\",\n        value: \"user\"\n      }],\n      roleItem: [{\n        name: \"Hiero7\",\n        value: \"hiero7\"\n      }],\n      error: {\n        status: false,\n        message: \"\"\n      }\n    };\n  },\n  methods: {\n    filterDataAction: function filterDataAction() {\n      var _this = this;\n\n      if (this.searchText == \"\") {\n        this.filterData = this.rawData;\n      } else {\n        this.filterData = this.rawData.filter(function (row) {\n          return !_this.searchText || row.email.toLowerCase().indexOf(_this.searchText.toLowerCase()) > -1 || row.name.toLowerCase().indexOf(_this.searchText.toLowerCase()) > -1 || row.user_type.toLowerCase().indexOf(_this.searchText.toLowerCase()) > -1 || row.last_login_time.toLowerCase().indexOf(_this.searchText.toLowerCase()) > -1;\n        });\n      }\n\n      this.setPages();\n    },\n    addItem: function addItem() {\n      this.$refs.editForm.reset();\n      this.userInfo = {\n        user_group_id: this.userGroupId\n      };\n      this.editedIndex = -1;\n      this.dialog.edit = true;\n    },\n    addNewUser: function addNewUser() {\n      if (this.userInfo.user_type == \"hiero7\") {\n        this.userInfo.user_group_id = 1;\n      } else if (this.userInfo.user_type == \"admin\") {\n        this.userInfo.level = 1;\n      } else {\n        this.userInfo.level = 2;\n      }\n\n      this.$store.dispatch(\"users/newUser\", this.userInfo).then(function (result) {\n        this.$store.dispatch(\"global/showSnackbarSuccess\", \"Update user success!\");\n        this.refreshData();\n      }.bind(this)).catch(function (error) {\n        this.$store.dispatch(\"global/showSnackbarError\", error.message);\n        this.$store.dispatch(\"global/finishLoading\");\n      }.bind(this));\n      this.closeEditDialog();\n    },\n    editItem: function editItem(item, type) {\n      var vm = this; // this.$refs.editForm.reset();\n\n      this.$store.dispatch(\"global/startLoading\");\n      this.editedIndex = this.filterData.indexOf(item);\n      this.userInfo = Object.assign({}, item);\n\n      if (this.userInfo.user_type == \"hiero7\") {\n        this.userInfo.user_group_id = 1;\n      } else if (this.userInfo.user_type == \"admin\") {\n        this.userInfo.level = 1;\n      } else {\n        this.userInfo.level = 2;\n      }\n\n      if (type == 0) {\n        this.dialog.edit = true;\n      } else {\n        this.dialog.password = true;\n        this.$store.dispatch(\"global/finishLoading\");\n      }\n    },\n    updateUser: function () {\n      var _updateUser = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var response, roleResponse, productsResponse;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.userInfo.user_type == \"hiero7\") {\n                  this.userInfo.user_group_id = 1;\n                } else if (this.userInfo.user_type == \"admin\") {\n                  this.userInfo.level = 1;\n                } else {\n                  this.userInfo.level = 2;\n                }\n\n                if (!this.$refs.editForm.validate()) {\n                  _context.next = 28;\n                  break;\n                }\n\n                this.$store.dispatch(\"global/startLoading\");\n\n                if (!(this.editedIndex == -1)) {\n                  _context.next = 7;\n                  break;\n                }\n\n                this.addNewUser();\n                _context.next = 28;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.next = 10;\n                return this.$store.dispatch(\"users/updateUserProfile\", this.userInfo);\n\n              case 10:\n                response = _context.sent;\n\n                if (!(this.userInfo.user_type != \"origin\" && this.userInfo.user_type != \"hiero7\")) {\n                  _context.next = 15;\n                  break;\n                }\n\n                _context.next = 14;\n                return this.$store.dispatch(\"users/updateUserRole\", {\n                  uid: this.userInfo.uid,\n                  level: this.userInfo.level\n                });\n\n              case 14:\n                roleResponse = _context.sent;\n\n              case 15:\n                if (!(this.userInfo.user_type == \"user\")) {\n                  _context.next = 19;\n                  break;\n                }\n\n                _context.next = 18;\n                return this.$axios.post(\"portal/users/\" + this.userInfo.uid + \"/products\", {\n                  products: JSON.stringify(this.userInfo.products)\n                });\n\n              case 18:\n                productsResponse = _context.sent;\n\n              case 19:\n                this.$store.dispatch(\"global/showSnackbarSuccess\", \"Update user success!\");\n                _context.next = 26;\n                break;\n\n              case 22:\n                _context.prev = 22;\n                _context.t0 = _context[\"catch\"](7);\n                this.$store.dispatch(\"global/showSnackbarError\", _context.t0.message ? _context.t0.message : _context.t0.response.data.message);\n                this.$store.dispatch(\"global/finishLoading\");\n\n              case 26:\n                this.refreshData();\n                this.closeEditDialog();\n\n              case 28:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[7, 22]]);\n      }));\n\n      function updateUser() {\n        return _updateUser.apply(this, arguments);\n      }\n\n      return updateUser;\n    }(),\n    updateUserStatus: function updateUserStatus(item, status) {\n      this.$store.dispatch(\"global/startLoading\");\n      var user = Object.assign({}, item);\n      this.$store.dispatch(\"users/updateUserStatus\", {\n        uid: user.uid,\n        status: status\n      }).then(function (result) {\n        this.refreshData();\n        this.$store.dispatch(\"global/showSnackbarSuccess\", \"Update status success!\");\n      }.bind(this)).catch(function (error) {\n        this.$store.dispatch(\"global/showSnackbarError\", error.message);\n        this.$store.dispatch(\"global/finishLoading\");\n      }.bind(this));\n    },\n    forgotPassword: function forgotPassword(item) {\n      var user = Object.assign({}, item);\n      this.$store.dispatch(\"global/startLoading\");\n      this.$store.dispatch(\"account/forgotPassword\", user.email).then(function (result) {\n        this.$store.dispatch(\"global/showSnackbarSuccess\", \"An e-mail will be sent to \" + user.email + \" with further instructions.\");\n        this.$store.dispatch(\"global/finishLoading\");\n      }.bind(this)).catch(function (error) {\n        this.$store.dispatch(\"global/showSnackbarError\", error.message);\n        this.$store.dispatch(\"global/finishLoading\");\n      }.bind(this));\n    },\n    closeEditDialog: function closeEditDialog() {\n      this.dialog.edit = false;\n      this.$store.dispatch(\"global/finishLoading\");\n    },\n    closeDeleteDialog: function closeDeleteDialog() {\n      this.dialog.dlelete = false;\n      this.deleteIndex = -1;\n    },\n    closePasswordDialog: function closePasswordDialog() {\n      this.dialog.password = false;\n      this.$refs.passwordForm.reset();\n    },\n    setPages: function setPages() {\n      if (this.perPage == null || this.filterData == null) {\n        this.pages = null;\n      } else {\n        this.pages = Math.ceil(this.filterData.length / this.perPage);\n      }\n    }\n  },\n  computed: {\n    formTitle: function formTitle() {\n      return this.editedIndex === -1 ? \"New User\" : \"Edit User\";\n    }\n  },\n  watch: {\n    rawData: function rawData() {\n      this.rawData.forEach(function (obj, idx) {\n        obj.status = obj.deleted_at == null ? true : false;\n      });\n      this.filterData = this.rawData;\n      this.setPages();\n    },\n    searchText: function searchText(value) {\n      this.filterDataAction();\n    },\n    perPage: function perPage(value) {\n      this.pagination.rowsPerPage = value;\n      this.setPages();\n    }\n  },\n  mounted: function mounted() {\n    this.filterDataAction();\n  }\n};",{"version":3,"sources":["UsersTable.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang=\"pug\">\n    #user-table\n        v-card\n            v-card-title\n                v-layout(row align-center)\n                    //- v-flex.px-2(xs12 sm6 md2)\n                    //-     v-select.pt-0.mt-0(v-model=\"perPage\" :items=\"rowsPerPageItems\" item-text=\"name\" item-value=\"value\" hide-details)\n                    v-flex.px-2(xs12 sm6 md3)\n                        v-text-field.pt-0.mt-0(v-model=\"searchText\" append-icon=\"search\" label=\"Search\" single-line hide-details)\n                    v-spacer\n                    v-btn(color=\"primary\" dark @click=\"addItem\" :disabled=\"!status\") Add User\n            v-data-table.elevation-1(:headers=\"headers\" :items=\"filterData\" :search=\"searchText\" :loading=\"$store.state.global.isLoading\" :pagination.sync=\"pagination\"  hide-actions )\n                template(slot=\"items\" slot-scope=\"props\" color=\"primary\")\n                    tr(:class=\"props.item.status? '': 'grey--text'\")\n                        td.text-xs-left() {{props.index +1}}\n                        td.text-xs-left() \n                            .name.font-weight-medium {{props.item.name}}\n                            .email.grey--text.text--darken-3 {{props.item.email}}\n                        td.text-xs-left()  {{(props.item.user_type == \"origin\")? 'root': props.item.user_type}}\n                        td.text-xs-left() {{props.item.last_login_time}}\n                        td.text-xs-left() {{(props.item.status)? 'acive' : 'inactive'}}\n                        td.text-xs-left()\n                            v-btn.ma-0(flat icon small color=\"primary\" @click=\"editItem(props.item, 0)\" title=\"edit user\" :disabled=\"!props.item.status\" v-if=\"props.item.user_type != 'origin'\")\n                                v-icon(small) edit\n                            //- v-btn.ma-0(flat icon small color=\"primary\" @click=\"editItem(props.item, 1)\" title=\"change password\" :disabled=\"!props.item.status\" v-if=\"props.item.user_type != 'origin'\")\n                            //-     v-icon(small) lock\n                            v-menu(offset-y left v-if=\"props.item.user_type != 'origin'\") \n                                template(v-slot:activator=\"{on}\")\n                                    v-btn.ma-0(flat icon small color=\"primary\" v-on=\"on\" :disabled=\"!status\")\n                                        v-icon( small) more_vert\n                                v-list.pa-0\n                                    v-list-tile(v-if=\"props.item.status\" @click=\"updateUserStatus(props.item, 0)\")\n                                        v-list-tile-title inactive user\n                                    v-list-tile(v-else @click=\"updateUserStatus(props.item, 1)\")\n                                        v-list-tile-title active user\n                                    v-list-tile(@click=\"forgotPassword(props.item)\")\n                                        v-list-tile-title reset password\n            v-layout.px-2(row align-center)\n                v-flex.text-xs-left.py-3(xs4)\n                    //- b.total-items total: {{filterData.length}} \n                v-flex.text-xs-right.py-3(xs8)\n                    v-pagination(v-model=\"pagination.page\" :length=\"pages\" :total-visible=\"7\" color=\"primary\")\n        //- Dialogs\n        v-dialog.edit-dialog(v-model=\"dialog.edit\" max-width=\"460\" persistent)\n            v-card\n                v-card-title.title {{formTitle}}\n                v-card-text\n                    v-form(ref=\"editForm\")\n                        v-text-field(v-model=\"userInfo.name\" label=\"Name\" type=\"text\" name=\"name\" :rules=\"[rules.required]\")\n                        .role-select(v-if=\"user_type == 'hiero7'\")\n                            v-select(v-model=\"userInfo.user_type\" :items=\"roleItem\" item-text=\"name\" item-value=\"value\" label=\"Role\" :rules=\"[rules.required]\")\n\n                        .role-select(v-else)\n                            v-select(v-if=\"userInfo.user_type !== 'origin'\" v-model=\"userInfo.user_type\" :items=\"roleItems\" item-text=\"name\" item-value=\"value\" label=\"Role\" :rules=\"[rules.required]\" ) \n                            v-text-field(v-else label=\"Role\" type=\"text\" name=\"role\" disabled value=\"Admin\") \n                            //- .role-select\n                            //-     v-select(v-if=\"userInfo.user_type != 'origin'\" v-model=\"userInfo.user_type\" :items=\"roleItems\" item-text=\"name\" item-value=\"value\" label=\"Role\" :rules=\"[rules.required]\" )\n                            //-     v-text-field(v-else label=\"Role\" type=\"text\" name=\"role\" disabled value=\"Admin\") \n\n                        v-text-field(v-model=\"userInfo.email\" label=\"Email\" type=\"text\" name=\"email\" :rules=\"[rules.required, rules.email]\" :disabled=\"editedIndex === -1 ? false : true\")\n                        v-text-field(v-model=\"userInfo.phone\" label=\"Phone\" type=\"text\" name=\"phone\")\n                        v-text-field(v-model=\"userInfo.password\" label=\"Password\" type=\"password\" name=\"password\")\n                        //- v-text-field(v-if=\"editedIndex===-1\" v-model=\"userInfo.password\" label=\"Password\" type=\"password\" name=\"password\" :rules=\"[rules.required, rules.min]\" )\n\n                        //- v-select(v-if=\"userInfo.user_type == 'user' && editedIndex != -1\" v-model=\"userInfo.products\" :items=\"products\" item-text=\"name\" item-value=\"id\" label=\"Select Products\" multiple chips hint=\"permission\" persistent-hint return-object)\n                        v-alert.text-md-left(:value=\"error.status\" color=\"error\" icon=\"warning\" outline transition=\"scale-transition\") {{error.message}}\n\n                v-card-actions  \n                    v-spacer\n                    v-btn(color=\"grey\" flat=\"flat\" @click=\"closeEditDialog\") Cancel\n                    v-btn(color=\"primary\" flat=\"flat\" @click=\"updateUser\") Save\n        \n        //- v-dialog.change-ps-dialog(v-model=\"dialog.password\" max-width=\"460\")\n        //-     v-card  \n        //-         v-card-title.title Change User Password\n        //-         v-card-text\n        //-             v-form(ref=\"passwordForm\")\n        //-                 v-text-field(v-model=\"userInfo.email\" label=\"Email\" type=\"text\" name=\"email\" disabled)\n        //-                 v-text-field(v-model=\"userInfo.password\" label=\"Password\" type=\"password\" name=\"password\" :rules=\"[rules.required, rules.min]\" @change=\"verifyPassword\")\n        //-                 v-text-field(v-model=\"userInfo.confirmPassword\" label=\"Confirm Password\" type=\"password\" name=\"confirmpassword\" :rules=\"[rules.required, rules.password]\")\n        //-         v-card-actions  \n        //-             v-spacer\n        //-             v-btn(color=\"grey\" flat=\"flat\" @click=\"closePasswordDialog\") Cancel\n        //-             v-btn(color=\"primary\" flat=\"flat\" @click=\"updatePassword\") Save\n        //- v-dialog.otp-dialog(v-model=\"dialog.otp\" max-width=\"460\" )\n        //-     v-card()\n        //-         v-card-title.title Disable two-step verification\n        //-         v-card-text\n        //-             .text.text-xs-left If you disable two-step verification, this account's owner only need email and password when sign in to the website.\n        //-         v-card-actions  \n        //-             v-spacer\n        //-             v-btn(color=\"grey\" flat=\"flat\" @click=\"dialog.otp = false\") Cancel\n        //-             v-btn(color=\"primary\" flat=\"flat\" @click=\"disableOtp\") Disable\n</template>\n<script>\nimport textFieldRules from \"../utils/textFieldRules\";\n\nexport default {\n    mixins: [textFieldRules],\n    props: {\n        rawData: {\n            type: Array\n        },\n        refreshData: {\n            type: Function,\n            default: function() {}\n        },\n        userGroupId: {\n            type: Number,\n            default: 0\n        },\n        status: {\n            type: Boolean\n        }\n    },\n    data() {\n        return {\n            user_type: \"\",\n            perPage: 20,\n            pages: 0,\n            searchText: \"\",\n            filterData: [],\n            headers: [\n                {\n                    text: \"#\",\n                    align: \"left\",\n                    sortable: false,\n                    width: \"80px\",\n                    value: \"id\"\n                },\n                {\n                    text: \"User\",\n                    align: \"left\",\n                    sortable: true,\n                    value: \"name\"\n                },\n                {\n                    text: \"Role\",\n                    align: \"left\",\n                    value: \"user_type\",\n                    width: \"100px\",\n                    sortable: true\n                },\n                // {\n                //     text: \"Email\",\n                //     align: \"left\",\n                //     width: \"200px\",\n                //     value: \"email\",\n                //     sortable: true\n                // },\n                {\n                    text: \"Last login time\",\n                    align: \"left\",\n                    width: \"200px\",\n                    value: \"timestamp\",\n                    sortable: true\n                },\n                {\n                    text: \"Status\",\n                    align: \"left\",\n                    width: \"100px\",\n                    value: \"status\",\n                    sortable: true\n                },\n                {\n                    text: \"Actions\",\n                    align: \"left\",\n                    value: \"action\",\n                    width: \"150px\",\n                    sortable: true\n                }\n            ],\n            pagination: {\n                rowsPerPage: 20\n            },\n            rowsPerPageItems: [\n                { name: \"20 per page\", value: 20 },\n                { name: \"50 per pages\", value: 50 }\n            ],\n            products: [],\n            dialog: {\n                edit: false,\n                delete: false,\n                password: false,\n                otp: false\n            },\n            userInfo: {},\n            editedIndex: -1,\n            deleteIndex: -1,\n            roleItems: [\n                { name: \"Admin\", value: \"admin\" },\n                { name: \"User\", value: \"user\" }\n            ],\n            roleItem: [{ name: \"Hiero7\", value: \"hiero7\" }],\n            error: {\n                status: false,\n                message: \"\"\n            }\n        };\n    },\n    methods: {\n        filterDataAction: function() {\n            if (this.searchText == \"\") {\n                this.filterData = this.rawData;\n            } else {\n                this.filterData = this.rawData.filter(row => {\n                    return (\n                        !this.searchText ||\n                        row.email\n                            .toLowerCase()\n                            .indexOf(this.searchText.toLowerCase()) > -1 ||\n                        row.name\n                            .toLowerCase()\n                            .indexOf(this.searchText.toLowerCase()) > -1 ||\n                        row.user_type\n                            .toLowerCase()\n                            .indexOf(this.searchText.toLowerCase()) > -1 ||\n                        row.last_login_time\n                            .toLowerCase()\n                            .indexOf(this.searchText.toLowerCase()) > -1\n                    );\n                });\n            }\n            this.setPages();\n        },\n        addItem: function() {\n            this.$refs.editForm.reset();\n            this.userInfo = { user_group_id: this.userGroupId };\n            this.editedIndex = -1;\n            this.dialog.edit = true;\n        },\n        addNewUser: function() {\n            if (this.userInfo.user_type == \"hiero7\") {\n                this.userInfo.user_group_id = 1;\n            } else if (this.userInfo.user_type == \"admin\") {\n                this.userInfo.level = 1;\n            } else {\n                this.userInfo.level = 2;\n            }\n            this.$store\n                .dispatch(\"users/newUser\", this.userInfo)\n                .then(\n                    function(result) {\n                        this.$store.dispatch(\n                            \"global/showSnackbarSuccess\",\n                            \"Update user success!\"\n                        );\n                        this.refreshData();\n                    }.bind(this)\n                )\n                .catch(\n                    function(error) {\n                        this.$store.dispatch(\n                            \"global/showSnackbarError\",\n                            error.message\n                        );\n                        this.$store.dispatch(\"global/finishLoading\");\n                    }.bind(this)\n                );\n            this.closeEditDialog();\n        },\n        editItem: function(item, type) {\n            var vm = this;\n            // this.$refs.editForm.reset();\n            this.$store.dispatch(\"global/startLoading\");\n            this.editedIndex = this.filterData.indexOf(item);\n            this.userInfo = Object.assign({}, item);\n            if (this.userInfo.user_type == \"hiero7\") {\n                this.userInfo.user_group_id = 1;\n            } else if (this.userInfo.user_type == \"admin\") {\n                this.userInfo.level = 1;\n            } else {\n                this.userInfo.level = 2;\n            }\n            if (type == 0) {\n                this.dialog.edit = true;\n            } else {\n                this.dialog.password = true;\n                this.$store.dispatch(\"global/finishLoading\");\n            }\n        },\n        updateUser: async function() {\n            if (this.userInfo.user_type == \"hiero7\") {\n                this.userInfo.user_group_id = 1;\n            } else if (this.userInfo.user_type == \"admin\") {\n                this.userInfo.level = 1;\n            } else {\n                this.userInfo.level = 2;\n            }\n            if (this.$refs.editForm.validate()) {\n                this.$store.dispatch(\"global/startLoading\");\n                if (this.editedIndex == -1) {\n                    this.addNewUser();\n                } else {\n                    try {\n                        var response = await this.$store.dispatch(\n                            \"users/updateUserProfile\",\n                            this.userInfo\n                        );\n                        if (\n                            this.userInfo.user_type != \"origin\" &&\n                            this.userInfo.user_type != \"hiero7\"\n                        ) {\n                            var roleResponse = await this.$store.dispatch(\n                                \"users/updateUserRole\",\n                                {\n                                    uid: this.userInfo.uid,\n                                    level: this.userInfo.level\n                                }\n                            );\n                        }\n                        if (this.userInfo.user_type == \"user\") {\n                            var productsResponse = await this.$axios.post(\n                                \"portal/users/\" +\n                                    this.userInfo.uid +\n                                    \"/products\",\n                                {\n                                    products: JSON.stringify(\n                                        this.userInfo.products\n                                    )\n                                }\n                            );\n                        }\n                        this.$store.dispatch(\n                            \"global/showSnackbarSuccess\",\n                            \"Update user success!\"\n                        );\n                    } catch (error) {\n                        this.$store.dispatch(\n                            \"global/showSnackbarError\",\n                            error.message\n                                ? error.message\n                                : error.response.data.message\n                        );\n                        this.$store.dispatch(\"global/finishLoading\");\n                    }\n                    this.refreshData();\n                    this.closeEditDialog();\n                }\n            }\n        },\n\n        updateUserStatus: function(item, status) {\n            this.$store.dispatch(\"global/startLoading\");\n            var user = Object.assign({}, item);\n\n            this.$store\n                .dispatch(\"users/updateUserStatus\", {\n                    uid: user.uid,\n                    status: status\n                })\n                .then(\n                    function(result) {\n                        this.refreshData();\n                        this.$store.dispatch(\n                            \"global/showSnackbarSuccess\",\n                            \"Update status success!\"\n                        );\n                    }.bind(this)\n                )\n                .catch(\n                    function(error) {\n                        this.$store.dispatch(\n                            \"global/showSnackbarError\",\n                            error.message\n                        );\n                        this.$store.dispatch(\"global/finishLoading\");\n                    }.bind(this)\n                );\n        },\n\n        forgotPassword: function(item) {\n            var user = Object.assign({}, item);\n            this.$store.dispatch(\"global/startLoading\");\n\n            this.$store\n                .dispatch(\"account/forgotPassword\", user.email)\n                .then(\n                    function(result) {\n                        this.$store.dispatch(\n                            \"global/showSnackbarSuccess\",\n                            \"An e-mail will be sent to \" +\n                                user.email +\n                                \" with further instructions.\"\n                        );\n                        this.$store.dispatch(\"global/finishLoading\");\n                    }.bind(this)\n                )\n                .catch(\n                    function(error) {\n                        this.$store.dispatch(\n                            \"global/showSnackbarError\",\n                            error.message\n                        );\n                        this.$store.dispatch(\"global/finishLoading\");\n                    }.bind(this)\n                );\n        },\n        closeEditDialog: function() {\n            this.dialog.edit = false;\n            this.$store.dispatch(\"global/finishLoading\");\n        },\n        closeDeleteDialog: function() {\n            this.dialog.dlelete = false;\n            this.deleteIndex = -1;\n        },\n        closePasswordDialog: function() {\n            this.dialog.password = false;\n            this.$refs.passwordForm.reset();\n        },\n        setPages: function() {\n            if (this.perPage == null || this.filterData == null) {\n                this.pages = null;\n            } else {\n                this.pages = Math.ceil(this.filterData.length / this.perPage);\n            }\n        }\n    },\n    computed: {\n        formTitle() {\n            return this.editedIndex === -1 ? \"New User\" : \"Edit User\";\n        }\n    },\n    watch: {\n        rawData: function() {\n            this.rawData.forEach((obj, idx) => {\n                obj.status = obj.deleted_at == null ? true : false;\n            });\n            this.filterData = this.rawData;\n            this.setPages();\n        },\n        searchText: function(value) {\n            this.filterDataAction();\n        },\n        perPage: function(value) {\n            this.pagination.rowsPerPage = value;\n            this.setPages();\n        }\n    },\n    mounted() {\n        this.filterDataAction();\n    }\n};\n</script>\n<style lang=\"sass\" scoped>\n\n</style>\n\n\n"],"sourceRoot":"src/components"}]}