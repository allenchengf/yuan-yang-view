{"remainingRequest":"/Users/karen.chen/Desktop/yuan-yang-view/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/karen.chen/Desktop/yuan-yang-view/src/views/setting.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/karen.chen/Desktop/yuan-yang-view/src/views/setting.vue","mtime":1557974500060},{"path":"/Users/karen.chen/Desktop/yuan-yang-view/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/karen.chen/Desktop/yuan-yang-view/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/karen.chen/Desktop/yuan-yang-view/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/Users/karen.chen/Desktop/yuan-yang-view/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/karen.chen/Desktop/yuan-yang-view/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport domainInfo from \"../components/domainInfo\";\nimport CDNsetting from \"../components/CDNsetting\";\nimport iRouteCDNsetting from \"../components/iRouteCDNsetting\";\n\nexport default {\n    components: { domainInfo, CDNsetting, iRouteCDNsetting },\n\n    data() {\n        return {\n            currentTab: \"\",\n            loading: false,\n            select: \"\",\n            tabs: [\n                {\n                    name: \"General\",\n                    route: \"admin/setting\",\n                    component: domainInfo\n                },\n                {\n                    name: \"CDNs\",\n                    route: \"settingCDN\",\n                    component: CDNsetting\n                },\n                {\n                    name: \"iRouteCDN\",\n                    route: \"settingiRouteCDN\",\n                    component: iRouteCDNsetting\n                }\n            ],\n            filterData: [],\n            selected: { name: \"\", cname: \"\" },\n            domain: {},\n            domain_id: \"\"\n        };\n    },\n    methods: {\n        getAllDomains: function() {\n            this.$store.dispatch(\"global/startLoading\");\n            this.$store\n                .dispatch(\"domains/getAllDomains\")\n                .then(\n                    function(result) {\n                        this.filterData = result.data.domains;\n                        // this.handleData();\n                        this.setPages();\n                        this.$store.dispatch(\"global/finishLoading\");\n                    }.bind(this)\n                )\n                .catch(\n                    function(error) {\n                        this.$store.dispatch(\"global/finishLoading\");\n                        this.$store.dispatch(\n                            \"global/showSnackbarError\",\n                            error.message\n                        );\n                    }.bind(this)\n                );\n        },\n        customFilter(item, queryText, itemText) {\n            const textOne = item.name.toLowerCase();\n            const textTwo = item.cname.toLowerCase();\n            const searchText = queryText.toLowerCase();\n\n            return (\n                textOne.indexOf(searchText) > -1 ||\n                textTwo.indexOf(searchText) > -1\n            );\n        },\n        mapping() {\n            this.filterData.forEach((o, i) => {\n                if (o.name == this.select) {\n                    this.tabs.forEach((obj, idx) => {\n                        obj.domain_id = o.id;\n                    });\n                }\n            });\n        }\n    },\n    mounted() {\n        this.getAllDomains();\n    },\n    watch: {\n        select: function() {\n            console.log(this.select);\n            this.mapping();\n            console.log(this.tabs, \"watch\");\n        },\n        domain_id: function() {\n            console.log(this.domain_id);\n        }\n    },\n    mounted() {\n        this.getAllDomains();\n    },\n    created() {\n        var domainData = this.$route.query.data;\n        this.domain = domainData;\n        if (domainData !== \"\") {\n            this.select = domainData.name;\n            console.log(this.currentTab);\n            this.tabs.forEach((o, i) => {\n                o.domain_id = this.domain.id;\n            });\n        }\n    }\n};\n",{"version":3,"sources":["setting.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAofile":"setting.vue","sourceRoot":"src/views","sourcesContent":["<template lang=\"pug\">\n    v-container#setting\n        v-layout(wrap column)\n            v-flex(xs12)\n                .title.text-xs-left.mb-4 Setting\n        v-layout(wrap column)  \n            //- v-flex(xs12 sm4 md4)\n            //-     v-autocomplete(:items=\"filterData\" :filter=\"customFilter\" label=\"Choose your domain to setting\" item-text=\"name\" v-model=\"select\")\n            v-flex(xs12 sm4 md4)\n                v-tabs(slider-color=\"primary\" right)\n                    v-autocomplete(:items=\"filterData\" :filter=\"customFilter\" label=\"Choose your domain to setting\" item-text=\"name\" v-model=\"select\")\n                    v-tab(v-for=\"tab in tabs\" @click=\"domain_id = tab.domain_id;currentTab = tab\" v-model=\"currentTab\") {{tab.name}} \n                    v-tabs-items\n                        v-tab-item(v-for=\"tab in tabs\")\n                            //- h4 {{currentTab.domain_id}}\n                            component(:is=\"tab.component\" :tab=\"tab\" :domain_id=\"currentTab.domain_id\")\n\n</template>\n\n<script>\nimport domainInfo from \"../components/domainInfo\";\nimport CDNsetting from \"../components/CDNsetting\";\nimport iRouteCDNsetting from \"../components/iRouteCDNsetting\";\n\nexport default {\n    components: { domainInfo, CDNsetting, iRouteCDNsetting },\n\n    data() {\n        return {\n            currentTab: \"\",\n            loading: false,\n            select: \"\",\n            tabs: [\n                {\n                    name: \"General\",\n                    route: \"admin/setting\",\n                    component: domainInfo\n                },\n                {\n                    name: \"CDNs\",\n                    route: \"settingCDN\",\n                    component: CDNsetting\n                },\n                {\n                    name: \"iRouteCDN\",\n                    route: \"settingiRouteCDN\",\n                    component: iRouteCDNsetting\n                }\n            ],\n            filterData: [],\n            selected: { name: \"\", cname: \"\" },\n            domain: {},\n            domain_id: \"\"\n        };\n    },\n    methods: {\n        getAllDomains: function() {\n            this.$store.dispatch(\"global/startLoading\");\n            this.$store\n                .dispatch(\"domains/getAllDomains\")\n                .then(\n                    function(result) {\n                        this.filterData = result.data.domains;\n                        // this.handleData();\n                        this.setPages();\n                        this.$store.dispatch(\"global/finishLoading\");\n                    }.bind(this)\n                )\n                .catch(\n                    function(error) {\n                        this.$store.dispatch(\"global/finishLoading\");\n                        this.$store.dispatch(\n                            \"global/showSnackbarError\",\n                            error.message\n                        );\n                    }.bind(this)\n                );\n        },\n        customFilter(item, queryText, itemText) {\n            const textOne = item.name.toLowerCase();\n            const textTwo = item.cname.toLowerCase();\n            const searchText = queryText.toLowerCase();\n\n            return (\n                textOne.indexOf(searchText) > -1 ||\n                textTwo.indexOf(searchText) > -1\n            );\n        },\n        mapping() {\n            this.filterData.forEach((o, i) => {\n                if (o.name == this.select) {\n                    this.tabs.forEach((obj, idx) => {\n                        obj.domain_id = o.id;\n                    });\n                }\n            });\n        }\n    },\n    mounted() {\n        this.getAllDomains();\n    },\n    watch: {\n        select: function() {\n            console.log(this.select);\n            this.mapping();\n            console.log(this.tabs, \"watch\");\n        },\n        domain_id: function() {\n            console.log(this.domain_id);\n        }\n    },\n    mounted() {\n        this.getAllDomains();\n    },\n    created() {\n        var domainData = this.$route.query.data;\n        this.domain = domainData;\n        if (domainData !== \"\") {\n            this.select = domainData.name;\n            console.log(this.currentTab);\n            this.tabs.forEach((o, i) => {\n                o.domain_id = this.domain.id;\n            });\n        }\n    }\n};\n</script>\n"]}]}