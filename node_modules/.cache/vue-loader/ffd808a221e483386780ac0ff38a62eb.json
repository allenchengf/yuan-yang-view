{"remainingRequest":"/Users/karen.chen/Desktop/yuan-yang-view/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/karen.chen/Desktop/yuan-yang-view/src/components/CDNsetting.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/karen.chen/Desktop/yuan-yang-view/src/components/CDNsetting.vue","mtime":1557902520754},{"path":"/Users/karen.chen/Desktop/yuan-yang-view/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/karen.chen/Desktop/yuan-yang-view/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/karen.chen/Desktop/yuan-yang-view/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/Users/karen.chen/Desktop/yuan-yang-view/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/karen.chen/Desktop/yuan-yang-view/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport textFieldRules from \"../utils/textFieldRules.js\";\n\nexport default {\n    mixins: [textFieldRules],\n    props: [\"tab\", \"domain_id\"],\n    data() {\n        return {\n            pagination: {\n                rowsPerPage: 20\n            },\n            rowsPerPageItems: [\n                { name: \"20 per page\", value: 20 },\n                { name: \"50 per pages\", value: 50 }\n            ],\n            perPage: 20,\n            pages: 0,\n            dialog: {\n                edit: false\n            },\n            error: {\n                status: false,\n                message: \"\"\n            },\n            domain: {},\n            editedIndex: -1,\n            operatorAuth: 0,\n            searchText: \"\",\n            filterData: [],\n            headers: [\n                {\n                    text: \"#\",\n                    align: \"left\",\n                    sortable: false,\n                    width: \"80px\",\n                    value: \"id\"\n                },\n                {\n                    text: \"Name\",\n                    align: \"left\",\n                    sortable: true,\n                    value: \"name\"\n                },\n                {\n                    text: \"CDN CName\",\n                    align: \"left\",\n                    sortable: true,\n                    value: \"cname\"\n                },\n                {\n                    text: \"TTL\",\n                    align: \"left\",\n                    sortable: true,\n                    value: \"ttl\"\n                },\n                {\n                    text: \"Default\",\n                    align: \"left\",\n                    sortable: false,\n                    value: \"default\"\n                },\n                {\n                    text: \"Actions\",\n                    align: \"left\",\n                    sortable: false,\n                    width: \"200px\"\n                }\n            ],\n            cdn: {}\n        };\n    },\n    methods: {\n        getAllCDNs: function() {\n            this.$store.dispatch(\"global/startLoading\");\n            this.$store\n                .dispatch(\"domains/getAllCDNs\", this.tab.domain_id)\n                .then(\n                    function(result) {\n                        this.filterData = result.data;\n                        this.cdn.domain_id = this.tab.domain_id;\n                        this.setPages();\n                        this.$store.dispatch(\"global/finishLoading\");\n                    }.bind(this)\n                )\n                .catch(\n                    function(error) {\n                        this.$store.dispatch(\"global/finishLoading\");\n                        this.$store.dispatch(\n                            \"global/showSnackbarError\",\n                            error.message\n                        );\n                    }.bind(this)\n                );\n        },\n        editItem: function(item, type) {\n            this.editedIndex = this.filterData.indexOf(item);\n            this.cdn = Object.assign({}, item);\n            if (type == 0) {\n                this.dialog.edit = true;\n            }\n        },\n        updateCDN: function() {\n            this.cdn.domain_id = this.tab.domain_id;\n            if (this.$refs.editForm.validate()) {\n                this.$store.dispatch(\"global/startLoading\");\n                if (this.editedIndex == -1) {\n                    this.addNewCDN();\n                } else {\n                    if (this.cdn.default == false) {\n                        this.cdn.default = 0;\n                    } else {\n                        this.cdn.default = 1;\n                    }\n                    this.$store.dispatch(\"global/startLoading\");\n                    this.$store\n                        .dispatch(\"domains/updateCDN\", this.cdn)\n                        .then(\n                            function(result) {\n                                this.$store.dispatch(\"global/finishLoading\");\n                                this.getAllCDNs();\n                                this.closeEditDialog();\n                            }.bind(this)\n                        )\n                        .catch(\n                            function(error) {\n                                this.$store.dispatch(\"global/finishLoading\");\n                                this.$store.dispatch(\n                                    \"global/showSnackbarError\",\n                                    error.message\n                                );\n                            }.bind(this)\n                        );\n                }\n            }\n        },\n        addItem: function() {\n            this.$refs.editForm.reset();\n            this.editedIndex = -1;\n            this.dialog.edit = true;\n        },\n        addNewCDN: function() {\n            this.cdn.domain_id = this.tab.domain_id;\n            var vm = this;\n            if (this.$refs.editForm.validate()) {\n                this.$store.dispatch(\"global/startLoading\");\n                this.$store\n                    .dispatch(\"domains/newCDN\", this.cdn)\n                    .then(\n                        function(result) {\n                            this.$store.dispatch(\n                                \"global/showSnackbarSuccess\",\n                                \"Update user success!\"\n                            );\n                            this.getAllCDNs();\n                            this.$store.dispatch(\"global/finishLoading\");\n                        }.bind(this)\n                    )\n                    .catch(\n                        function(error) {\n                            this.$store.dispatch(\n                                \"global/showSnackbarError\",\n                                error.message\n                            );\n                            this.$store.dispatch(\"global/finishLoading\");\n                        }.bind(this)\n                    );\n                this.closeEditDialog();\n            }\n        },\n        closeEditDialog: function() {\n            this.dialog.edit = false;\n        },\n        setPages: function() {\n            if (this.perPage == null || this.filterData == null) {\n                this.pages = null;\n            } else {\n                this.pages = Math.ceil(this.filterData.length / this.perPage);\n            }\n        }\n    },\n    computed: {\n        formTitle() {\n            return this.editedIndex === -1 ? \"New CDN\" : \"Edit CDN\";\n        }\n    },\n    watch: {\n        perPage: function(value) {\n            this.pagination.rowsPerPage = value;\n            this.setPages();\n        },\n        domain_id: function() {\n            this.getAllCDNs();\n        }\n    },\n    mounted() {\n        this.getAllCDNs();\n        console.log(this.editedIndex);\n    }\n};\n",{"version":3,"sources":["CDNsetting.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CDNsetting.vue","sourceRoot":"src/components","sourcesContent":["<template lang=\"pug\">\n    v-container#cdnSetting\n        v-card\n            v-card-title\n                v-layout(row align-center)\n                    v-flex.px-2(xs12 sm6 md3)\n                        v-text-field.pt-0.mt-0(v-model=\"searchText\" append-icon=\"search\" label=\"Search\" single-line hide-details)\n                    v-spacer\n                    v-btn(color=\"primary\" dark @click=\"addItem\") Add CDN\n                    h4 {{tab.domain_id}}\n\n            v-data-table.elevation-1(:headers=\"headers\" :items=\"filterData\" :loading=\"$store.state.global.isLoading\" :pagination.sync=\"pagination\"  hide-actions :search=\"searchText\")\n                v-progress-linear(v-slot:progress color=\"primary\")\n                template(slot=\"items\" slot-scope=\"props\")\n                    tr\n                        td.text-xs-left {{props.index +1}}\n                        td.text-xs-left() \n                            .name.font-weight-medium {{props.item.name}}\n                        td.text-xs-left {{props.item.cname}}\n                        td.text-xs-left {{props.item.ttl}}\n                        td.text-xs-left\n                            v-icon(large color=\"green darken-2\" v-if=\"props.item.default == true\") check\n                        td.text-xs-left\n                            v-btn.ma-0(flat icon small color=\"primary\" @click=\"editItem(props.item, 0)\" title=\"edit cdn\")\n                                v-icon(small) edit\n                            v-menu(offset-y left) \n                                template(v-slot:activator=\"{on}\")\n                                    v-btn.ma-0(flat icon small color=\"primary\" v-on=\"on\" )\n                                        v-icon( small) more_vert\n                                v-list.pa-0\n                                    v-list-tile()\n                                        v-list-tile-title Change to default\n                                        \n            v-layout.px-2(row align-center)\n                v-flex.text-xs-left.py-3(xs4)\n                v-flex.text-xs-right.py-3(xs8)\n                    v-pagination(v-model=\"pagination.page\" :length=\"pages\" :total-visible=\"7\" color=\"primary\")\n        //- Dialogs\n        v-dialog.edit-dialog(v-model=\"dialog.edit\" max-width=\"460\" persistent)\n            v-card\n                v-card-title.title {{formTitle}}\n                v-card-text\n                    v-form(ref=\"editForm\")\n                        v-text-field(v-model=\"cdn.name\" label=\"CDN Name\" type=\"text\" name=\"name\" :rules=\"[rules.required]\")\n                        v-text-field(v-model=\"cdn.cname\" label=\"CDN CName\" type=\"text\" name=\"cname\")\n                        v-text-field(v-model=\"cdn.ttl\" label=\"TTL\" type=\"number\" name=\"ttl\" :rules=\"[rules.ttl]\")\n                        v-alert.text-md-left(:value=\"error.status\" color=\"error\" icon=\"warning\" outline transition=\"scale-transition\") {{error.message}}\n                v-card-actions  \n                    v-spacer\n                    v-btn(color=\"grey\" flat=\"flat\" @click=\"closeEditDialog\") Cancel\n                    v-btn(color=\"primary\" flat=\"flat\" @click=\"updateCDN\") Save\n</template>\n\n<script>\nimport textFieldRules from \"../utils/textFieldRules.js\";\n\nexport default {\n    mixins: [textFieldRules],\n    props: [\"tab\", \"domain_id\"],\n    data() {\n        return {\n            pagination: {\n                rowsPerPage: 20\n            },\n            rowsPerPageItems: [\n                { name: \"20 per page\", value: 20 },\n                { name: \"50 per pages\", value: 50 }\n            ],\n            perPage: 20,\n            pages: 0,\n            dialog: {\n                edit: false\n            },\n            error: {\n                status: false,\n                message: \"\"\n            },\n            domain: {},\n            editedIndex: -1,\n            operatorAuth: 0,\n            searchText: \"\",\n            filterData: [],\n            headers: [\n                {\n                    text: \"#\",\n                    align: \"left\",\n                    sortable: false,\n                    width: \"80px\",\n                    value: \"id\"\n                },\n                {\n                    text: \"Name\",\n                    align: \"left\",\n                    sortable: true,\n                    value: \"name\"\n                },\n                {\n                    text: \"CDN CName\",\n                    align: \"left\",\n                    sortable: true,\n                    value: \"cname\"\n                },\n                {\n                    text: \"TTL\",\n                    align: \"left\",\n                    sortable: true,\n                    value: \"ttl\"\n                },\n                {\n                    text: \"Default\",\n                    align: \"left\",\n                    sortable: false,\n                    value: \"default\"\n                },\n                {\n                    text: \"Actions\",\n                    align: \"left\",\n                    sortable: false,\n                    width: \"200px\"\n                }\n            ],\n            cdn: {}\n        };\n    },\n    methods: {\n        getAllCDNs: function() {\n            this.$store.dispatch(\"global/startLoading\");\n            this.$store\n                .dispatch(\"domains/getAllCDNs\", this.tab.domain_id)\n                .then(\n                    function(result) {\n                        this.filterData = result.data;\n                        this.cdn.domain_id = this.tab.domain_id;\n                        this.setPages();\n                        this.$store.dispatch(\"global/finishLoading\");\n                    }.bind(this)\n                )\n                .catch(\n                    function(error) {\n                        this.$store.dispatch(\"global/finishLoading\");\n                        this.$store.dispatch(\n                            \"global/showSnackbarError\",\n                            error.message\n                        );\n                    }.bind(this)\n                );\n        },\n        editItem: function(item, type) {\n            this.editedIndex = this.filterData.indexOf(item);\n            this.cdn = Object.assign({}, item);\n            if (type == 0) {\n                this.dialog.edit = true;\n            }\n        },\n        updateCDN: function() {\n            this.cdn.domain_id = this.tab.domain_id;\n            if (this.$refs.editForm.validate()) {\n                this.$store.dispatch(\"global/startLoading\");\n                if (this.editedIndex == -1) {\n                    this.addNewCDN();\n                } else {\n                    if (this.cdn.default == false) {\n                        this.cdn.default = 0;\n                    } else {\n                        this.cdn.default = 1;\n                    }\n                    this.$store.dispatch(\"global/startLoading\");\n                    this.$store\n                        .dispatch(\"domains/updateCDN\", this.cdn)\n                        .then(\n                            function(result) {\n                                this.$store.dispatch(\"global/finishLoading\");\n                                this.getAllCDNs();\n                                this.closeEditDialog();\n                            }.bind(this)\n                        )\n                        .catch(\n                            function(error) {\n                                this.$store.dispatch(\"global/finishLoading\");\n                                this.$store.dispatch(\n                                    \"global/showSnackbarError\",\n                                    error.message\n                                );\n                            }.bind(this)\n                        );\n                }\n            }\n        },\n        addItem: function() {\n            this.$refs.editForm.reset();\n            this.editedIndex = -1;\n            this.dialog.edit = true;\n        },\n        addNewCDN: function() {\n            this.cdn.domain_id = this.tab.domain_id;\n            var vm = this;\n            if (this.$refs.editForm.validate()) {\n                this.$store.dispatch(\"global/startLoading\");\n                this.$store\n                    .dispatch(\"domains/newCDN\", this.cdn)\n                    .then(\n                        function(result) {\n                            this.$store.dispatch(\n                                \"global/showSnackbarSuccess\",\n                                \"Update user success!\"\n                            );\n                            this.getAllCDNs();\n                            this.$store.dispatch(\"global/finishLoading\");\n                        }.bind(this)\n                    )\n                    .catch(\n                        function(error) {\n                            this.$store.dispatch(\n                                \"global/showSnackbarError\",\n                                error.message\n                            );\n                            this.$store.dispatch(\"global/finishLoading\");\n                        }.bind(this)\n                    );\n                this.closeEditDialog();\n            }\n        },\n        closeEditDialog: function() {\n            this.dialog.edit = false;\n        },\n        setPages: function() {\n            if (this.perPage == null || this.filterData == null) {\n                this.pages = null;\n            } else {\n                this.pages = Math.ceil(this.filterData.length / this.perPage);\n            }\n        }\n    },\n    computed: {\n        formTitle() {\n            return this.editedIndex === -1 ? \"New CDN\" : \"Edit CDN\";\n        }\n    },\n    watch: {\n        perPage: function(value) {\n            this.pagination.rowsPerPage = value;\n            this.setPages();\n        },\n        domain_id: function() {\n            this.getAllCDNs();\n        }\n    },\n    mounted() {\n        this.getAllCDNs();\n        console.log(this.editedIndex);\n    }\n};\n</script>\n"]}]}